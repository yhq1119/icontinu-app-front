{"remainingRequest":"C:\\Users\\Nathan\\Desktop\\github-repository\\icontinu-app-front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Nathan\\Desktop\\github-repository\\icontinu-app-front\\src\\views\\TestView.vue?vue&type=style&index=0&id=b4642dde&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\Nathan\\Desktop\\github-repository\\icontinu-app-front\\src\\views\\TestView.vue","mtime":1571170628360},{"path":"C:\\Users\\Nathan\\Desktop\\github-repository\\icontinu-app-front\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"C:\\Users\\Nathan\\Desktop\\github-repository\\icontinu-app-front\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\Nathan\\Desktop\\github-repository\\icontinu-app-front\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\Nathan\\Desktop\\github-repository\\icontinu-app-front\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1564062719000},{"path":"C:\\Users\\Nathan\\Desktop\\github-repository\\icontinu-app-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Nathan\\Desktop\\github-repository\\icontinu-app-front\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\n#left-card {\r\n  padding: 2em;\r\n  height: 100%;\r\n  border-radius: 30px;\r\n  border-color: #e3d0ff;\r\n}\r\n\r\n#face-scan-card {\r\n  padding: 2em;\r\n  border-radius: 30px;\r\n  border-color: #e3d0ff;\r\n}\r\n#header1 {\r\n  color: #5c6ac4;\r\n}\r\n",{"version":3,"sources":["TestView.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmQA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"TestView.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div align=\"center\">\r\n    <v-snackbar v-model=\"alert\" top :color=\"color\">\r\n      <div>\r\n        <v-btn @click=\"alert = false\" icon>\r\n          <v-icon>md-close-circle</v-icon>\r\n        </v-btn>\r\n        {{ alert_msg }}\r\n      </div>\r\n    </v-snackbar>\r\n    <v-overlay v-model=\"overlay\" z-index=\"10000\">Verifying, please wait...</v-overlay>\r\n    <v-row>\r\n      <v-col cols=\"12\" md=\"2\"></v-col>\r\n      <v-col cols=\"12\" md=\"8\">\r\n        <v-row>\r\n          <v-col>\r\n            <div>\r\n              <h1 id=\"header1\">Face Verification</h1>\r\n            </div>\r\n          </v-col>\r\n        </v-row>\r\n        <v-row>\r\n          <v-col cols=\"12\" md=\"6\" class=\"d-none d-md-block\">\r\n            <v-card outlined id=\"left-card\">\r\n              <v-img height=\"100%\" src=../assets/facescan.png>\r\n              </v-img>\r\n            </v-card>\r\n          </v-col>\r\n          <v-col cols=\"12\" md=\"6\">\r\n            <v-card outlined id=\"face-scan-card\">\r\n              <v-row>\r\n                <v-col>\r\n                  <!--  -->\r\n                  <v-row>\r\n                    <v-col>\r\n                      <div>\r\n                        <vue-web-cam\r\n                          ref=\"webcam\"\r\n                          :device-id=\"deviceId\"\r\n                          width=\"100%\"\r\n                          @started=\"onStarted\"\r\n                          @stopped=\"onStopped\"\r\n                          @error=\"onError\"\r\n                          @cameras=\"onCameras\"\r\n                          @camera-change=\"onCameraChange\"\r\n                        />\r\n                      </div>\r\n                    </v-col>\r\n                  </v-row>\r\n                  <!--  -->\r\n                  <v-row>\r\n                    <v-col>\r\n                      <v-btn\r\n                        id=\"submitbtn\"\r\n                        @click=\"onCapture\"\r\n                        color=\"rgb(231,113,51)\"\r\n                        dark\r\n                        block\r\n                      >Capture Face</v-btn>\r\n                    </v-col>\r\n                  </v-row>\r\n                  <!--  -->\r\n                  <v-row>\r\n                    <v-col>\r\n                      <div class=\"text-center\">\r\n                        <v-menu offset-y>\r\n                          <template v-slot:activator=\"{ on }\">\r\n                            <v-btn block color=\"orange\" dark v-on=\"on\" outlined>CHOOSE CAMERA</v-btn>\r\n                          </template>\r\n                          <v-list>\r\n                            <v-list-item\r\n                              v-for=\"item in devices\"\r\n                              :key=\"item.deviceId\"\r\n                              @click=\"camera = item.deviceId\"\r\n                            >\r\n                              <v-list-item-title>{{ item.label }}</v-list-item-title>\r\n                            </v-list-item>\r\n                          </v-list>\r\n                        </v-menu>\r\n                      </div>\r\n                    </v-col>\r\n                  </v-row>\r\n                  <!--  -->\r\n                  <v-row>\r\n                    <v-col>\r\n                      <v-switch v-model=\"showCamera\" @change=\"toggle_camera\" label=\"Camera on/off\"></v-switch>\r\n                    </v-col>\r\n                  </v-row>\r\n                  <!--  -->\r\n                  <!--  -->\r\n                </v-col>\r\n              </v-row>\r\n            </v-card>\r\n          </v-col>\r\n        </v-row>\r\n      </v-col>\r\n      <v-col cols=\"12\" md=\"2\"></v-col>\r\n    </v-row>\r\n    <div align=\"center\">\r\n      <canvas id=\"draw\" style=\"display: none;\" />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n/* eslint-disable */\r\nimport WebCam from \"../components/WebCam\";\r\nimport { mapState } from \"vuex\";\r\nexport default {\r\n  name: \"verify\",\r\n  components: {\r\n    \"vue-web-cam\": WebCam\r\n  },\r\n  data() {\r\n    return {\r\n      showCamera: true,\r\n      course_id: \"\",\r\n      overlay: false,\r\n      img: null,\r\n      camera: null,\r\n      deviceId: null,\r\n      devices: []\r\n    };\r\n  },\r\n  mounted() {\r\n    this.course_id = this.$route.params.id;\r\n    this.hint();\r\n    this.getCompetence();\r\n  },\r\n  computed: {\r\n    ...mapState([\"username\"]),\r\n\r\n    device() {\r\n      return this.devices.find(n => n.deviceId === this.deviceId);\r\n    }\r\n  },\r\n  watch: {\r\n    camera: function(id) {\r\n      this.deviceId = id;\r\n    },\r\n    devices: function() {\r\n      // Once we have a list select the first one\r\n      const [first, ...tail] = this.devices;\r\n      if (first) {\r\n        this.camera = first.deviceId;\r\n        this.deviceId = first.deviceId;\r\n      }\r\n      tail.deviceId\r\n    }\r\n  },\r\n  methods: {\r\n    toggle_camera() {\r\n      if (this.showCamera) {\r\n        this.onStart();\r\n      } else {\r\n        this.onStop();\r\n      }\r\n    },\r\n    snackBar(text, color) {\r\n      this.$store.commit(\"SET_SNACKBAR\", {\r\n        showing: true,\r\n        text: text,\r\n        color: color\r\n      });\r\n    },\r\n    async onCapture() {\r\n      this.overlay = true;\r\n      this.img = this.$refs.webcam.capture();\r\n      let file = this.dataURLtoFile(this.img, \"taken\");\r\n      console.log(file);\r\n      let res = await this.$store.dispatch(\"callAzure\", file);\r\n      console.log(res);\r\n\r\n      if (res.length == 0) {\r\n        this.snackBar(\"No face detected!\", \"warning\");\r\n      } else if (res.length == 1) {\r\n        this.callBackend(res[0].faceId);\r\n      } else {\r\n        this.snackBar(\"More than one face, please capture again\", \"warning\");\r\n      }\r\n      this.overlay = false;\r\n    },\r\n    async callBackend(faceId) {\r\n      let dataSend = new FormData();\r\n\r\n      dataSend.append(\"username\", this.username);\r\n      // dataSend.append('username','admin')\r\n      dataSend.append(\"course_id\", this.course_id);\r\n      dataSend.append(\"face_id\", faceId);\r\n      let res = await this.$store.dispatch(\"callAPI\", {\r\n        send: dataSend,\r\n        branch: \"/verification/\",\r\n        call: \"DO_NOTHING\",\r\n        setData: {}\r\n      });\r\n\r\n      if (res.code == \"1\") {\r\n        // let faceData = new FormData()\r\n        // faceData.append('course_id',this.course_id)\r\n        // faceData.append('username',this.username)\r\n\r\n        let res1 = await this.$store.dispatch(\"callAPI\", {\r\n          send: dataSend,\r\n          branch: \"/user_pass_face/\",\r\n          call: \"DO_NOTHING\",\r\n          setData: {}\r\n        });\r\n        this.overlay = false;\r\n\r\n        if (res1.code == \"1\") {\r\n          this.snackBar(\"Face verification passed!\", \"success\");\r\n          this.$router.push({ path: \"/\" });\r\n        }\r\n      } else {\r\n        this.snackBar(\"Face verification failed!\", \"error\");\r\n      }\r\n    },\r\n    dataURLtoFile(dataURL, filename) {\r\n      var arr = dataURL.split(\",\");\r\n      var mime = arr[0].match(/:(.*?);/)[1];\r\n      var bstr = atob(arr[1]);\r\n      var n = bstr.length;\r\n      var u8arr = new Uint8Array(n);\r\n      while (n--) {\r\n        u8arr[n] = bstr.charCodeAt(n);\r\n      }\r\n      return new File([u8arr], filename, { type: mime });\r\n    },\r\n    onStarted(stream) {\r\n      console.log(\"On Started Event\", stream);\r\n    },\r\n    onStopped(stream) {\r\n      console.log(\"On Stopped Event\", stream);\r\n    },\r\n    onStop() {\r\n      this.snackBar(\"Camera stopped\", \"success\");\r\n\r\n      this.$refs.webcam.stop();\r\n    },\r\n    onStart() {\r\n      this.snackBar(\"Camera opened\", \"success\");\r\n      this.$refs.webcam.start();\r\n    },\r\n    onError(error) {\r\n      console.log(\"On Error Event\", error);\r\n    },\r\n    onCameras(cameras) {\r\n      this.devices = cameras;\r\n      console.log(\"On Cameras Event\", cameras);\r\n    },\r\n    onCameraChange(deviceId) {\r\n      this.deviceId = deviceId;\r\n      this.camera = deviceId;\r\n      console.log(\"On Camera Change Event\", deviceId);\r\n    }\r\n  }\r\n};\r\n</script>\r\n<style scoped>\r\n#left-card {\r\n  padding: 2em;\r\n  height: 100%;\r\n  border-radius: 30px;\r\n  border-color: #e3d0ff;\r\n}\r\n\r\n#face-scan-card {\r\n  padding: 2em;\r\n  border-radius: 30px;\r\n  border-color: #e3d0ff;\r\n}\r\n#header1 {\r\n  color: #5c6ac4;\r\n}\r\n</style>\r\n"]}]}