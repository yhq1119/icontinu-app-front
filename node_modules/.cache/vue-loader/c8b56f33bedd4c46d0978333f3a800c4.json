{"remainingRequest":"C:\\Users\\Nathan\\Desktop\\github-repository\\icontinu-app-front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Nathan\\Desktop\\github-repository\\icontinu-app-front\\src\\components\\Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Nathan\\Desktop\\github-repository\\icontinu-app-front\\src\\components\\Login.vue","mtime":1571300397840},{"path":"C:\\Users\\Nathan\\Desktop\\github-repository\\icontinu-app-front\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Nathan\\Desktop\\github-repository\\icontinu-app-front\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1564062719000},{"path":"C:\\Users\\Nathan\\Desktop\\github-repository\\icontinu-app-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Nathan\\Desktop\\github-repository\\icontinu-app-front\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { mapState } from \"vuex\";\r\nimport Signup from \"./Signup\";\r\nexport default {\r\n  components: {\r\n    Signup\r\n  },\r\n  data() {\r\n    return {\r\n      showpass: false,\r\n      requiredRule: [v => !!v || \"Input required\"],\r\n      lazy: false,\r\n      valid: true,\r\n      usernameL: \"\",\r\n      dialog: false,\r\n      username: \"\",\r\n      pass1: \"\",\r\n      loading: null,\r\n      show: null,\r\n      message: \"\"\r\n    };\r\n  },\r\n  methods: {\r\n    clear() {\r\n      this.username = \"\";\r\n      this.pass1 = \"\";\r\n    },\r\n    snackBar(text, color) {\r\n      this.$store.commit(\"SET_SNACKBAR\", {\r\n        showing: true,\r\n        text: text,\r\n        color: color\r\n      });\r\n    },\r\n    async cancel() {\r\n      // let res =\r\n       await this.$store.dispatch(\"callAPI\", {\r\n        send: {},\r\n        branch: \"/logout/\",\r\n        call: \"DO_NOTHING\",\r\n        setData: {}\r\n      });\r\n\r\n    },\r\n    async logout() {\r\n      let res = await this.$store.dispatch(\"callAPI\", {\r\n        send: {},\r\n        branch: \"/logout/\",\r\n        call: \"DO_NOTHING\",\r\n        setData: {}\r\n      });\r\n      console.log(res);\r\n      if (res.code == \"ok\") {\r\n        this.$store.commit(\"LOG_OUT\", false);\r\n        this.$store.commit(\"SET_SNACKBAR\", {\r\n          showing: true,\r\n          text: \"Log out successfully\",\r\n          color: \"success\"\r\n        });\r\n\r\n        setTimeout(this.$router.push(\"/\"), 1000);\r\n      } else {\r\n        this.$store.commit(\"SET_SNACKBAR\", {\r\n          showing: true,\r\n          text: \"Error when logging out\",\r\n          color: \"error\"\r\n        });\r\n      }\r\n    },\r\n    usernameset() {\r\n      this.usernameL = window.localStorage.getItem(\"username\");\r\n    },\r\n    login() {\r\n      if (this.$refs.form1.validate()) {\r\n        this.submit();\r\n      }\r\n    },\r\n    loginAdmin() {\r\n      if (this.$refs.form1.validate()) {\r\n        this.admin();\r\n      }\r\n    },\r\n    async admin() {\r\n      this.loading = true;\r\n      let send = new FormData();\r\n      send.append(\"username\", this.username);\r\n      send.append(\"password\", this.pass1);\r\n      let branch = \"/login/\";\r\n      let call = \"DO_NOTHING\";\r\n      let dataSend = {\r\n        send: send,\r\n        branch: branch,\r\n        call: call,\r\n        setData: {}\r\n      };\r\n      try {\r\n        let res = await this.$store.dispatch(\"callAPI\", dataSend);\r\n        console.log(res);\r\n        if (res.code == \"ok\") {\r\n          if (res.is_staff != \"true\") {\r\n            this.cancel();\r\n            this.snackBar(\"Not Admin\", \"error\");\r\n          } else {\r\n            this.$store.commit(\"SET_ADMIN_LOGIN\", this.username);\r\n            this.usernameset();\r\n\r\n            this.snackBar(\"Login successfully\", \"success\");\r\n            this.$router.push(\"/admin/qr\");\r\n          }\r\n        } else {\r\n          this.snackBar(\"Login failed, Invalid login info\", \"error\");\r\n        }\r\n      } catch {\r\n        this.$store.dispatch(\"SET_SNACKBAR\", {\r\n          showing: true,\r\n          text: \"Login error\",\r\n          color: \"error\"\r\n        });\r\n      }\r\n      this.loading = false;\r\n      this.close();\r\n    },\r\n    async submit() {\r\n      this.loading = true;\r\n      let send = new FormData();\r\n      send.append(\"username\", this.username);\r\n      send.append(\"password\", this.pass1);\r\n      let branch = \"/login/\";\r\n      let call = \"DO_NOTHING\";\r\n      let dataSend = {\r\n        send: send,\r\n        branch: branch,\r\n        call: call,\r\n        setData: {}\r\n      };\r\n      try {\r\n        let res = await this.$store.dispatch(\"callAPI\", dataSend);\r\n        console.log(res);\r\n\r\n        if (res.code == \"ok\") {\r\n          if (res.is_staff == \"true\") {\r\n            this.snackBar(\"Not user\", \"error\");\r\n            this.cancel();\r\n          } else {\r\n            this.$store.commit(\"SET_USER_LOGIN\", this.username);\r\n            this.usernameset();\r\n\r\n            this.snackBar(\"Login successfully\", \"success\");\r\n            setTimeout(this.$router.push(\"/user/suggest\"), 3000);\r\n          }\r\n        } else {\r\n          this.snackBar(\"Login failed, Invalid login info\", \"error\");\r\n        }\r\n      } catch {\r\n          this.snackBar(\"Login error\", \"error\");\r\n      }\r\n      this.loading = false;\r\n      this.close();\r\n    },\r\n    sync() {\r\n      this.dialog = this.dialog_login;\r\n    },\r\n    close() {\r\n      this.$store.state.dialog_login = false;\r\n      this.sync();\r\n    },\r\n    open() {\r\n      this.$store.state.dialog_login = true;\r\n      this.sync();\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapState([\"isLogin\"])\r\n  },\r\n  mounted() {\r\n    this.usernameset();\r\n    this.sync();\r\n  }\r\n  // created() {\r\n  //   this.$store.watch(\r\n  //     state => state.isLogin,\r\n  //     () => {\r\n  //       this.isLogin = this.$store.state.isLogin;\r\n  //     }\r\n  //   );\r\n  // }\r\n};\r\n",{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwfile":"Login.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <v-row width=\"auto\" justify=\"center\">\r\n    <v-dialog v-model=\"dialog\" persistent max-width=\"600px\" max-height=\"100%\">\r\n      <template v-slot:activator=\"{ on }\">\r\n        <v-row>\r\n          <v-col style=\"padding:5px;\">\r\n            <v-btn text id=\"welcome-btn\" small rounded v-show=\"isLogin\">Welcome, {{usernameL}}</v-btn>\r\n          </v-col>\r\n          <v-col style=\"padding:0\">\r\n            <v-btn v-show=\"isLogin\" outlined rounded dark @click=\"logout\">Log out</v-btn>\r\n          </v-col>\r\n        </v-row>\r\n        <v-btn v-show=\"!isLogin\" outlined rounded dark v-on=\"on\">Log In</v-btn>\r\n      </template>\r\n      <h1 class=\"white--text\">Welcome! Please login</h1>\r\n      <v-card color=\"rgba(255,255,255,0.95)\">\r\n        <v-form v-model=\"valid\" ref=\"form1\" :lazy-validation=\"lazy\">\r\n          <v-card-title>\r\n            <span class=\"headline\">Log In</span>\r\n          </v-card-title>\r\n          <v-card-text>\r\n            <v-container>\r\n              <v-row>\r\n                <v-col cols=\"12\">\r\n                  <v-text-field\r\n                    v-model=\"username\"\r\n                    :rules=\"requiredRule\"\r\n                    label=\"Username*\"\r\n                    required\r\n                    clearable\r\n                  ></v-text-field>\r\n                </v-col>\r\n                <v-col cols=\"12\">\r\n                  <v-text-field\r\n                    v-model=\"pass1\"\r\n                    :rules=\"requiredRule\"\r\n                    label=\"Password*\"\r\n                    :type=\"showpass ? 'text': 'password'\"\r\n                    :append-icon=\"showpass ? 'mdi-eye':'mdi-eye-off'\"\r\n                    @click:append=\"showpass = !showpass\"\r\n                    required\r\n                  ></v-text-field>\r\n                </v-col>\r\n              </v-row>\r\n            </v-container>\r\n            <small>*indicates required field</small>\r\n          </v-card-text>\r\n          <v-card-actions>\r\n            <div></div>\r\n            <v-col>\r\n              <v-row class=\"pa-2\">\r\n                <v-btn dark rounded color=\"orange\" @click=\"login()\" block :loading=\"loading\">Login</v-btn>\r\n              </v-row>\r\n              <v-row justify=\"center\" class=\"pa-2\">\r\n                <v-btn light rounded color=\"orange\" block outlined @click=\"close\">Close</v-btn>\r\n              </v-row>\r\n              <v-row class=\"pa-2\">\r\n                <Signup />\r\n              </v-row>\r\n              <v-row cols=\"12\" class=\"pa-2\">\r\n                <v-btn rounded block outlined @click=\"loginAdmin()\">Organization Portal</v-btn>\r\n              </v-row>\r\n              <v-row cols=\"12\"></v-row>\r\n            </v-col>\r\n          </v-card-actions>\r\n        </v-form>\r\n      </v-card>\r\n    </v-dialog>\r\n  </v-row>\r\n</template>\r\n\r\n<script>\r\nimport { mapState } from \"vuex\";\r\nimport Signup from \"./Signup\";\r\nexport default {\r\n  components: {\r\n    Signup\r\n  },\r\n  data() {\r\n    return {\r\n      showpass: false,\r\n      requiredRule: [v => !!v || \"Input required\"],\r\n      lazy: false,\r\n      valid: true,\r\n      usernameL: \"\",\r\n      dialog: false,\r\n      username: \"\",\r\n      pass1: \"\",\r\n      loading: null,\r\n      show: null,\r\n      message: \"\"\r\n    };\r\n  },\r\n  methods: {\r\n    clear() {\r\n      this.username = \"\";\r\n      this.pass1 = \"\";\r\n    },\r\n    snackBar(text, color) {\r\n      this.$store.commit(\"SET_SNACKBAR\", {\r\n        showing: true,\r\n        text: text,\r\n        color: color\r\n      });\r\n    },\r\n    async cancel() {\r\n      // let res =\r\n       await this.$store.dispatch(\"callAPI\", {\r\n        send: {},\r\n        branch: \"/logout/\",\r\n        call: \"DO_NOTHING\",\r\n        setData: {}\r\n      });\r\n\r\n    },\r\n    async logout() {\r\n      let res = await this.$store.dispatch(\"callAPI\", {\r\n        send: {},\r\n        branch: \"/logout/\",\r\n        call: \"DO_NOTHING\",\r\n        setData: {}\r\n      });\r\n      console.log(res);\r\n      if (res.code == \"ok\") {\r\n        this.$store.commit(\"LOG_OUT\", false);\r\n        this.$store.commit(\"SET_SNACKBAR\", {\r\n          showing: true,\r\n          text: \"Log out successfully\",\r\n          color: \"success\"\r\n        });\r\n\r\n        setTimeout(this.$router.push(\"/\"), 1000);\r\n      } else {\r\n        this.$store.commit(\"SET_SNACKBAR\", {\r\n          showing: true,\r\n          text: \"Error when logging out\",\r\n          color: \"error\"\r\n        });\r\n      }\r\n    },\r\n    usernameset() {\r\n      this.usernameL = window.localStorage.getItem(\"username\");\r\n    },\r\n    login() {\r\n      if (this.$refs.form1.validate()) {\r\n        this.submit();\r\n      }\r\n    },\r\n    loginAdmin() {\r\n      if (this.$refs.form1.validate()) {\r\n        this.admin();\r\n      }\r\n    },\r\n    async admin() {\r\n      this.loading = true;\r\n      let send = new FormData();\r\n      send.append(\"username\", this.username);\r\n      send.append(\"password\", this.pass1);\r\n      let branch = \"/login/\";\r\n      let call = \"DO_NOTHING\";\r\n      let dataSend = {\r\n        send: send,\r\n        branch: branch,\r\n        call: call,\r\n        setData: {}\r\n      };\r\n      try {\r\n        let res = await this.$store.dispatch(\"callAPI\", dataSend);\r\n        console.log(res);\r\n        if (res.code == \"ok\") {\r\n          if (res.is_staff != \"true\") {\r\n            this.cancel();\r\n            this.snackBar(\"Not Admin\", \"error\");\r\n          } else {\r\n            this.$store.commit(\"SET_ADMIN_LOGIN\", this.username);\r\n            this.usernameset();\r\n\r\n            this.snackBar(\"Login successfully\", \"success\");\r\n            this.$router.push(\"/admin/qr\");\r\n          }\r\n        } else {\r\n          this.snackBar(\"Login failed, Invalid login info\", \"error\");\r\n        }\r\n      } catch {\r\n        this.$store.dispatch(\"SET_SNACKBAR\", {\r\n          showing: true,\r\n          text: \"Login error\",\r\n          color: \"error\"\r\n        });\r\n      }\r\n      this.loading = false;\r\n      this.close();\r\n    },\r\n    async submit() {\r\n      this.loading = true;\r\n      let send = new FormData();\r\n      send.append(\"username\", this.username);\r\n      send.append(\"password\", this.pass1);\r\n      let branch = \"/login/\";\r\n      let call = \"DO_NOTHING\";\r\n      let dataSend = {\r\n        send: send,\r\n        branch: branch,\r\n        call: call,\r\n        setData: {}\r\n      };\r\n      try {\r\n        let res = await this.$store.dispatch(\"callAPI\", dataSend);\r\n        console.log(res);\r\n\r\n        if (res.code == \"ok\") {\r\n          if (res.is_staff == \"true\") {\r\n            this.snackBar(\"Not user\", \"error\");\r\n            this.cancel();\r\n          } else {\r\n            this.$store.commit(\"SET_USER_LOGIN\", this.username);\r\n            this.usernameset();\r\n\r\n            this.snackBar(\"Login successfully\", \"success\");\r\n            setTimeout(this.$router.push(\"/user/suggest\"), 3000);\r\n          }\r\n        } else {\r\n          this.snackBar(\"Login failed, Invalid login info\", \"error\");\r\n        }\r\n      } catch {\r\n          this.snackBar(\"Login error\", \"error\");\r\n      }\r\n      this.loading = false;\r\n      this.close();\r\n    },\r\n    sync() {\r\n      this.dialog = this.dialog_login;\r\n    },\r\n    close() {\r\n      this.$store.state.dialog_login = false;\r\n      this.sync();\r\n    },\r\n    open() {\r\n      this.$store.state.dialog_login = true;\r\n      this.sync();\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapState([\"isLogin\"])\r\n  },\r\n  mounted() {\r\n    this.usernameset();\r\n    this.sync();\r\n  }\r\n  // created() {\r\n  //   this.$store.watch(\r\n  //     state => state.isLogin,\r\n  //     () => {\r\n  //       this.isLogin = this.$store.state.isLogin;\r\n  //     }\r\n  //   );\r\n  // }\r\n};\r\n</script>"]}]}