{"remainingRequest":"C:\\Users\\Nathan\\Desktop\\github-repository\\icontinu-app-front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Nathan\\Desktop\\github-repository\\icontinu-app-front\\src\\views\\FaceScan.vue?vue&type=style&index=0&id=94817cf8&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\Nathan\\Desktop\\github-repository\\icontinu-app-front\\src\\views\\FaceScan.vue","mtime":1571889731927},{"path":"C:\\Users\\Nathan\\Desktop\\github-repository\\icontinu-app-front\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"C:\\Users\\Nathan\\Desktop\\github-repository\\icontinu-app-front\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\Nathan\\Desktop\\github-repository\\icontinu-app-front\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\Nathan\\Desktop\\github-repository\\icontinu-app-front\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1564062719000},{"path":"C:\\Users\\Nathan\\Desktop\\github-repository\\icontinu-app-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Nathan\\Desktop\\github-repository\\icontinu-app-front\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#left-card {\n  padding: 2em;\n  height: 100%;\n  border-radius: 30px;\n  border-color: #e3d0ff;\n}\n\n#face-scan-card {\n  padding: 2em;\n  border-radius: 30px;\n  border-color: #e3d0ff;\n}\n#header1 {\n  color: #5c6ac4;\n}\n",{"version":3,"sources":["FaceScan.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0PA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"FaceScan.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div align=\"center\">\n    <v-overlay v-model=\"overlay\" z-index=\"10000\">Verifying, please wait...</v-overlay>\n    <v-row>\n      <v-col cols=\"12\" md=\"2\"></v-col>\n      <v-col cols=\"12\" md=\"8\">\n        <v-row>\n          <v-col>\n            <div>\n              <h1 id=\"header1\">Face Verification</h1>\n            </div>\n          </v-col>\n        </v-row>\n        <v-row>\n          <v-col cols=\"12\" md=\"6\" class=\"d-none d-md-block\">\n            <v-card outlined id=\"left-card\">\n              <v-img height=\"100%\" src=../assets/facescan.png>\n              </v-img>\n            </v-card>\n          </v-col>\n          <v-col cols=\"12\" md=\"6\">\n            <v-card outlined id=\"face-scan-card\">\n              <v-row>\n                <v-col>\n                  <!--  -->\n                  <v-row>\n                    <v-col>\n                      <div>\n                        <vue-web-cam\n                          ref=\"webcam\"\n                          :device-id=\"deviceId\"\n                          width=\"100%\"\n                          @started=\"onStarted\"\n                          @stopped=\"onStopped\"\n                          @error=\"onError\"\n                          @cameras=\"onCameras\"\n                          @camera-change=\"onCameraChange\"\n                        />\n                      </div>\n                    </v-col>\n                  </v-row>\n                  <!--  -->\n                  <v-row>\n                    <v-col>\n                      <v-btn\n                        id=\"submitbtn\"\n                        @click=\"onCapture\"\n                        color=\"rgb(231,113,51)\"\n                        dark\n                        block\n                      >Capture Face</v-btn>\n                    </v-col>\n                  </v-row>\n                  <!--  -->\n                  <v-row>\n                    <v-col>\n                      <div class=\"text-center\">\n                        <v-menu offset-y>\n                          <template v-slot:activator=\"{ on }\">\n                            <v-btn block color=\"orange\" dark v-on=\"on\" outlined>CHOOSE CAMERA</v-btn>\n                          </template>\n                          <v-list>\n                            <v-list-item\n                              v-for=\"item in devices\"\n                              :key=\"item.deviceId\"\n                              @click=\"camera = item.deviceId\"\n                            >\n                              <v-list-item-title>{{ item.label }}</v-list-item-title>\n                            </v-list-item>\n                          </v-list>\n                        </v-menu>\n                      </div>\n                    </v-col>\n                  </v-row>\n                  <!--  -->\n                  <v-row>\n                    <v-col>\n                      <v-switch v-model=\"showCamera\" @change=\"toggle_camera\" label=\"Camera on/off\"></v-switch>\n                    </v-col>\n                  </v-row>\n                  <!--  -->\n                  <!--  -->\n                </v-col>\n              </v-row>\n            </v-card>\n          </v-col>\n        </v-row>\n      </v-col>\n      <v-col cols=\"12\" md=\"2\"></v-col>\n    </v-row>\n    <div align=\"center\">\n      <canvas id=\"draw\" style=\"display: none;\" />\n    </div>\n  </div>\n</template>\n\n<script>\n// import axios from \"axios\";\nimport WebCam from \"../components/WebCam\";\nimport { mapState } from \"vuex\";\nexport default {\n  name: \"verify\",\n  components: {\n    \"vue-web-cam\": WebCam\n  },\n  data() {\n    return {\n      showCamera: true,\n      course_id: \"\",\n      overlay: false,\n      img: null,\n      camera: null,\n      deviceId: null,\n      devices: []\n    };\n  },\n  mounted() {\n    this.course_id = this.$route.params.id;\n    this.hint();\n    this.getCompetence();\n  },\n  computed: {\n    ...mapState([\"username\"]),\n\n    device() {\n      return this.devices.find(n => n.deviceId === this.deviceId);\n    }\n  },\n  watch: {\n    camera: function(id) {\n      this.deviceId = id;\n    },\n    devices: function() {\n      // Once we have a list select the first one\n      const [first, ...tail] = this.devices;\n      if (first) {\n        this.camera = first.deviceId;\n        this.deviceId = first.deviceId;\n      }\n    }\n  },\n  methods: {\n    toggle_camera() {\n      if (this.showCamera) {\n        this.onStart();\n      } else {\n        this.onStop();\n      }\n    },\n    snackBar(text, color) {\n      this.$store.commit(\"SET_SNACKBAR\", {\n        showing: true,\n        text: text,\n        color: color\n      });\n    },\n    async onCapture() {\n      this.overlay = true;\n      this.img = this.$refs.webcam.capture();\n      let file = this.dataURLtoFile(this.img, \"taken\");\n      // console.log(file);\n      let res = await this.$store.dispatch(\"callAzure\", file);\n      // console.log(res);\n\n      if (res.length == 0) {\n        this.snackBar(\"No face detected!\", \"warning\");\n        this.overlay = false;\n      } else if (res.length == 1) {\n        this.callBackend(res[0].faceId);\n      } else {\n        this.snackBar(\"More than one face, please capture again\", \"warning\"); \n        this.overlay = false;\n      }\n     \n    },\n    async callBackend(faceId) {\n      let dataSend = new FormData();\n\n      dataSend.append(\"username\", this.username);\n      dataSend.append(\"course_id\", this.course_id);\n      dataSend.append(\"face_id\", faceId);\n      let res = await this.$store.dispatch(\"callAPI\", {\n        send: dataSend,\n        branch: \"/verification/\",\n        call: \"DO_NOTHING\",\n        setData: {}\n      });\n      this.overlay = false;\n      if (res.code == \"1\") {\n        let res1 = await this.$store.dispatch(\"callAPI\", {\n          send: dataSend,\n          branch: \"/user_pass_face/\",\n          call: \"DO_NOTHING\",\n          setData: {}\n        });\n       \n        if (res1.code == \"1\") {\n          this.snackBar(\"Face verification passed!\", \"success\");\n          this.$refs.webcam.stop();\n          this.$router.push({ path: \"/\" });\n          \n        }\n        else{this.snackBar(\"Face verification failed! Incorrect course\", \"error\");\n        }\n      } else {\n        this.snackBar(\"Face verification failed!\", \"error\");\n      }\n    },\n    dataURLtoFile(dataURL, filename) {\n      var arr = dataURL.split(\",\");\n      var mime = arr[0].match(/:(.*?);/)[1];\n      var bstr = atob(arr[1]);\n      var n = bstr.length;\n      var u8arr = new Uint8Array(n);\n      while (n--) {\n        u8arr[n] = bstr.charCodeAt(n);\n      }\n      return new File([u8arr], filename, { type: mime });\n    },\n    onStarted(stream) {\n      // console.log(\"On Started Event\", stream);\n    },\n    onStopped(stream) {\n      // console.log(\"On Stopped Event\", stream);\n    },\n    onStop() {\n      this.snackBar(\"Camera stopped\", \"success\");\n\n      this.$refs.webcam.stop();\n    },\n    onStart() {\n      this.snackBar(\"Camera opened\", \"success\");\n      this.$refs.webcam.start();\n    },\n    onError(error) {\n      // console.log(\"On Error Event\", error);\n    },\n    onCameras(cameras) {\n      this.devices = cameras;\n      // console.log(\"On Cameras Event\", cameras);\n    },\n    onCameraChange(deviceId) {\n      this.deviceId = deviceId;\n      this.camera = deviceId;\n      // console.log(\"On Camera Change Event\", deviceId);\n    }\n  }\n};\n</script>\n<style scoped>\n#left-card {\n  padding: 2em;\n  height: 100%;\n  border-radius: 30px;\n  border-color: #e3d0ff;\n}\n\n#face-scan-card {\n  padding: 2em;\n  border-radius: 30px;\n  border-color: #e3d0ff;\n}\n#header1 {\n  color: #5c6ac4;\n}\n</style>\n"]}]}