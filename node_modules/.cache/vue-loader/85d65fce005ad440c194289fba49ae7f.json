{"remainingRequest":"C:\\Users\\Nathan\\Desktop\\github-repository\\icontinu-app-front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Nathan\\Desktop\\github-repository\\icontinu-app-front\\src\\views\\MyCourseView.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Nathan\\Desktop\\github-repository\\icontinu-app-front\\src\\views\\MyCourseView.vue","mtime":1571114470752},{"path":"C:\\Users\\Nathan\\Desktop\\github-repository\\icontinu-app-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Nathan\\Desktop\\github-repository\\icontinu-app-front\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Nathan\\Desktop\\github-repository\\icontinu-app-front\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Nathan\\Desktop\\github-repository\\icontinu-app-front\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1564062719000},{"path":"C:\\Users\\Nathan\\Desktop\\github-repository\\icontinu-app-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Nathan\\Desktop\\github-repository\\icontinu-app-front\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport QRCode from \"qrcodejs2\";\r\nexport default {\r\n  name: \"qrcoding\",\r\n  data() {\r\n    return {\r\n      course_id: \"\",\r\n      isScanned: false,\r\n      id: \"\",\r\n      dialog: {\r\n        showing: true,\r\n        title: \"\",\r\n        text: \"Please show this code to the organisor.\"\r\n      }\r\n    };\r\n  },\r\n  computed: {},\r\n  mounted() {\r\n    this.course_id = this.$route.params.id;\r\n    this.qrcode();\r\n    this.acvtiveQRCode();\r\n    this.timer = setInterval(this.queryStatus, 5000);\r\n  },\r\n  beforeRouteLeave(to, from, next) {\r\n    clearInterval(this.timer);\r\n    next();\r\n  },\r\n  methods: {\r\n    qrcode() {\r\n      let qr = document.getElementById(\"qrcode\");\r\n      this.id = this.course_id + new Date().getMilliseconds();\r\n      console.log(this.id);\r\n      let qrcode = new QRCode(qr, {\r\n        width: 250,\r\n        height: 250,\r\n        text: `{\"course\":\"${this.course_id}\",\r\n        \"username\":\"${window.localStorage.getItem(\"username\")}\",\r\n          \"id\": \"${this.id}\"}`,\r\n        background: \"#f0f\",\r\n        foreground: \"#ff0\"\r\n      });\r\n      console.log(qrcode);\r\n    },\r\n    goRec() {\r\n      this.$router.push({\r\n        name: \"face scan\",\r\n        params: { id: this.course_id }\r\n      });\r\n    },\r\n    async queryStatus() {\r\n      let data = new FormData();\r\n      data.append(\"id\", this.id);\r\n\r\n      let res = await this.$store.dispatch(\"callAPI\", {\r\n        send: data,\r\n        branch: \"/check_qr/\",\r\n        call: \"DO_NOTHING\",\r\n        setData: {}\r\n      });\r\n      if (res.code == \"scanned\") {\r\n        let send_data = new FormData();\r\n        // send_data.append(\"username\", window.localStorage.getItem(\"username\"));\r\n        send_data.append(\"course_id\", this.course_id);\r\n        let res = await this.$store.dispatch(\"callAPI\", {\r\n          send: send_data,\r\n          branch: \"/user_pass_qr/\",\r\n          call: \"DO_NOTHING\",\r\n          setData: {}\r\n        });\r\n        if (res.code == \"1\") {\r\n          this.$store.commit(\"SET_SNACKBAR\", {\r\n            showing: true,\r\n            text: \"Successfully verified QR code\",\r\n            color: \"success\"\r\n          });\r\n          this.goRec();\r\n        } else {\r\n          this.$store.commit(\"SET_SNACKBAR\", {\r\n            showing: true,\r\n            text: res.message,\r\n            color: \"error\"\r\n          });\r\n        }\r\n      }\r\n    },\r\n    async acvtiveQRCode() {\r\n      // let data = new FormData();\r\n      let res = await this.$store.dispatch(\"callAPI\", {\r\n        send: {},\r\n        branch: \"/active_qr/\",\r\n        call: \"DO_NOTHING\",\r\n        setData: {}\r\n      });\r\n      if (res.code == \"true\") {\r\n        console.log(res.message);\r\n      }\r\n    }\r\n  },\r\n  created() {},\r\n  beforeDestroy() {\r\n    clearInterval(this.timer);\r\n  }\r\n};\r\n",{"version":3,"sources":["MyCourseView.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"MyCourseView.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <v-container>\r\n    <v-row>\r\n      <v-col cols=\"12\" md=\"3\"></v-col>\r\n      <v-col cols=\"12\" md=\"6\">\r\n        <div id=\"qrCodingBox\">\r\n          <h1>Course QR Code</h1>\r\n          <v-card outlined id=\"qr-card\">\r\n            <v-col>\r\n              <v-row>\r\n                <v-col>\r\n                  <div id=\"qrcode\" ref=\"qrcode\"></div>\r\n                </v-col>\r\n              </v-row>\r\n              <v-row>\r\n                <v-col>\r\n                  <div>\r\n                    <v-chip id=\"hint\">SCAN YOUR CODE</v-chip>\r\n                  </div>\r\n                </v-col>\r\n              </v-row>\r\n            </v-col>\r\n          </v-card>\r\n          <!--  -->\r\n          <v-dialog v-model=\"dialog.showing\" width=\"300\">\r\n            <v-card color=\"rgba(255,255,255,0.90)\" style=\"padding:20px\">\r\n              <v-card-text>\r\n                <h2>{{dialog.text}}</h2>\r\n              </v-card-text>\r\n              <v-btn color=\"orange\" large dark @click=\"dialog.showing = false\">OK</v-btn>\r\n              <div class=\"flex-grow-1\" justify=\"center\"></div>\r\n            </v-card>\r\n          </v-dialog>\r\n          <!--  -->\r\n          <!-- <el-button type=\"primary\" @click=\"goRec\">Facial Recognition</el-button> -->\r\n        </div>\r\n      </v-col>\r\n      <v-col cols=\"12\" md=\"3\"></v-col>\r\n    </v-row>\r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\nimport QRCode from \"qrcodejs2\";\r\nexport default {\r\n  name: \"qrcoding\",\r\n  data() {\r\n    return {\r\n      course_id: \"\",\r\n      isScanned: false,\r\n      id: \"\",\r\n      dialog: {\r\n        showing: true,\r\n        title: \"\",\r\n        text: \"Please show this code to the organisor.\"\r\n      }\r\n    };\r\n  },\r\n  computed: {},\r\n  mounted() {\r\n    this.course_id = this.$route.params.id;\r\n    this.qrcode();\r\n    this.acvtiveQRCode();\r\n    this.timer = setInterval(this.queryStatus, 5000);\r\n  },\r\n  beforeRouteLeave(to, from, next) {\r\n    clearInterval(this.timer);\r\n    next();\r\n  },\r\n  methods: {\r\n    qrcode() {\r\n      let qr = document.getElementById(\"qrcode\");\r\n      this.id = this.course_id + new Date().getMilliseconds();\r\n      console.log(this.id);\r\n      let qrcode = new QRCode(qr, {\r\n        width: 250,\r\n        height: 250,\r\n        text: `{\"course\":\"${this.course_id}\",\r\n        \"username\":\"${window.localStorage.getItem(\"username\")}\",\r\n          \"id\": \"${this.id}\"}`,\r\n        background: \"#f0f\",\r\n        foreground: \"#ff0\"\r\n      });\r\n      console.log(qrcode);\r\n    },\r\n    goRec() {\r\n      this.$router.push({\r\n        name: \"face scan\",\r\n        params: { id: this.course_id }\r\n      });\r\n    },\r\n    async queryStatus() {\r\n      let data = new FormData();\r\n      data.append(\"id\", this.id);\r\n\r\n      let res = await this.$store.dispatch(\"callAPI\", {\r\n        send: data,\r\n        branch: \"/check_qr/\",\r\n        call: \"DO_NOTHING\",\r\n        setData: {}\r\n      });\r\n      if (res.code == \"scanned\") {\r\n        let send_data = new FormData();\r\n        // send_data.append(\"username\", window.localStorage.getItem(\"username\"));\r\n        send_data.append(\"course_id\", this.course_id);\r\n        let res = await this.$store.dispatch(\"callAPI\", {\r\n          send: send_data,\r\n          branch: \"/user_pass_qr/\",\r\n          call: \"DO_NOTHING\",\r\n          setData: {}\r\n        });\r\n        if (res.code == \"1\") {\r\n          this.$store.commit(\"SET_SNACKBAR\", {\r\n            showing: true,\r\n            text: \"Successfully verified QR code\",\r\n            color: \"success\"\r\n          });\r\n          this.goRec();\r\n        } else {\r\n          this.$store.commit(\"SET_SNACKBAR\", {\r\n            showing: true,\r\n            text: res.message,\r\n            color: \"error\"\r\n          });\r\n        }\r\n      }\r\n    },\r\n    async acvtiveQRCode() {\r\n      // let data = new FormData();\r\n      let res = await this.$store.dispatch(\"callAPI\", {\r\n        send: {},\r\n        branch: \"/active_qr/\",\r\n        call: \"DO_NOTHING\",\r\n        setData: {}\r\n      });\r\n      if (res.code == \"true\") {\r\n        console.log(res.message);\r\n      }\r\n    }\r\n  },\r\n  created() {},\r\n  beforeDestroy() {\r\n    clearInterval(this.timer);\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n#qrCodingBox {\r\n  text-align: center;\r\n}\r\n#qrcode {\r\n  padding-left: calc(50% - 125px);\r\n  padding-top: 50px;\r\n}\r\n#qr-card {\r\n  padding: 0 0 50px 0;\r\n  border-radius: 50px;\r\n  border-color: #e3d0ff;\r\n}\r\n#hint {\r\n  background-color: rgb(238, 175, 97);\r\n  color: #5c6ac4;\r\n}\r\n</style>\r\n"]}]}