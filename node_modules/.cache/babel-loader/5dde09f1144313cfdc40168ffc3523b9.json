{"remainingRequest":"C:\\Users\\Nathan\\Desktop\\github-repository\\icontinu-app-front\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\Nathan\\Desktop\\github-repository\\icontinu-app-front\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Nathan\\Desktop\\github-repository\\icontinu-app-front\\node_modules\\vuetify-loader\\lib\\loader.js!C:\\Users\\Nathan\\Desktop\\github-repository\\icontinu-app-front\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Nathan\\Desktop\\github-repository\\icontinu-app-front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Nathan\\Desktop\\github-repository\\icontinu-app-front\\src\\views\\Survey.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Nathan\\Desktop\\github-repository\\icontinu-app-front\\src\\views\\Survey.vue","mtime":1571066343000},{"path":"C:\\Users\\Nathan\\Desktop\\github-repository\\icontinu-app-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Nathan\\Desktop\\github-repository\\icontinu-app-front\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Nathan\\Desktop\\github-repository\\icontinu-app-front\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Nathan\\Desktop\\github-repository\\icontinu-app-front\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1564062719000},{"path":"C:\\Users\\Nathan\\Desktop\\github-repository\\icontinu-app-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Nathan\\Desktop\\github-repository\\icontinu-app-front\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"C:\\\\Users\\\\Nathan\\\\Desktop\\\\github-repository\\\\icontinu-app-front\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      course_id: '',\n      questions: [{\n        text: \"List three points you have learned.\"\n      }, {\n        text: \"Describe your opinions on \"\n      }, {\n        text: \"From 1 to 5, how do you rate this seminar? Please briefly state your reasons.\"\n      }]\n    };\n  },\n  methods: {\n    showSnackbar: function showSnackbar(text, color) {\n      this.$store.commit('SET_SNACKBAR', {\n        showing: true,\n        text: text,\n        color: color\n      });\n    },\n    submit_survey: function () {\n      var _submit_survey = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var sendData, res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                sendData = new FormData();\n                sendData.append('username', window.localStorage.getItem('username'));\n                sendData.append('course_id', this.course_id);\n                _context.next = 5;\n                return this.$store.dispatch('callAPI', {\n                  send: sendData,\n                  branch: '/user_pass_survey/',\n                  call: 'DO_NOTHING',\n                  setData: {}\n                });\n\n              case 5:\n                res = _context.sent;\n\n                if (res.code == '1') {\n                  this.$router.push(\"/submit_sv\");\n                } else {\n                  this.showSnackbar('Error when submit survey', 'error');\n                }\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function submit_survey() {\n        return _submit_survey.apply(this, arguments);\n      }\n\n      return submit_survey;\n    }()\n  },\n  computed: {\n    course: function course() {\n      return this.$store.getters.findCourseById(this.course_id);\n    }\n  },\n  mounted: function mounted() {\n    this.course_id = this.$route.params.id;\n  }\n};",{"version":3,"sources":["Survey.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoEA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,SAAA,EAAA,EADA;AAEA,MAAA,SAAA,EAAA,CACA;AACA,QAAA,IAAA,EAAA;AADA,OADA,EAIA;AACA,QAAA,IAAA,EAAA;AADA,OAJA,EAOA;AACA,QAAA,IAAA,EACA;AAFA,OAPA;AAFA,KAAA;AAeA,GAjBA;AAkBA,EAAA,OAAA,EAAA;AACA,IAAA,YADA,wBACA,IADA,EACA,KADA,EACA;AACA,WAAA,MAAA,CAAA,MAAA,CAAA,cAAA,EAAA;AACA,QAAA,OAAA,EAAA,IADA;AAEA,QAAA,IAAA,EAAA,IAFA;AAGA,QAAA,KAAA,EAAA;AAHA,OAAA;AAKA,KAPA;AAQA,IAAA,aARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA,gBAAA,QATA,GASA,IAAA,QAAA,EATA;AAUA,gBAAA,QAAA,CAAA,MAAA,CAAA,UAAA,EAAA,MAAA,CAAA,YAAA,CAAA,OAAA,CAAA,UAAA,CAAA;AACA,gBAAA,QAAA,CAAA,MAAA,CAAA,WAAA,EAAA,KAAA,SAAA;AAXA;AAAA,uBAYA,KAAA,MAAA,CAAA,QAAA,CAAA,SAAA,EAAA;AACA,kBAAA,IAAA,EAAA,QADA;AAEA,kBAAA,MAAA,EAAA,oBAFA;AAGA,kBAAA,IAAA,EAAA,YAHA;AAIA,kBAAA,OAAA,EAAA;AAJA,iBAAA,CAZA;;AAAA;AAYA,gBAAA,GAZA;;AAkBA,oBAAA,GAAA,CAAA,IAAA,IAAA,GAAA,EAAA;AACA,uBAAA,OAAA,CAAA,IAAA,CAAA,YAAA;AACA,iBAFA,MAGA;AACA,uBAAA,YAAA,CAAA,0BAAA,EAAA,OAAA;AACA;;AAvBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,GAlBA;AA6CA,EAAA,QAAA,EAAA;AACA,IAAA,MADA,oBACA;AACA,aAAA,KAAA,MAAA,CAAA,OAAA,CAAA,cAAA,CAAA,KAAA,SAAA,CAAA;AACA;AAHA,GA7CA;AAkDA,EAAA,OAlDA,qBAkDA;AACA,SAAA,SAAA,GAAA,KAAA,MAAA,CAAA,MAAA,CAAA,EAAA;AACA;AApDA,CAAA","sourcesContent":["<template>\r\n  <v-container>\r\n    <v-row>\r\n      <v-col cols=\"12\" md=\"1\"></v-col>\r\n      <v-col cols=\"12\" md=\"10\">\r\n        <!--  -->\r\n        <v-card class=\"pa-4\" outlined id=\"card1\">\r\n          <v-row>\r\n            <v-col>\r\n             </v-col>\r\n          </v-row>\r\n            <v-row>\r\n            <v-col>\r\n           </v-col>\r\n          </v-row>  <v-row>\r\n            <v-col>\r\n            </v-col>\r\n          </v-row>\r\n            <v-row>\r\n            <v-col>\r\n            </v-col>\r\n          </v-row>  <v-row>\r\n            <v-col>\r\n            </v-col>\r\n          </v-row>  \r\n          <v-row>\r\n            <v-col style=\"text-align:left\">\r\n              <span class=\"question\">1.{{questions[0].text}}</span>\r\n\r\n              <v-textarea color=\"#5c6ac4\" auto-grow  rows=\"1\"></v-textarea>\r\n            </v-col>\r\n          </v-row>\r\n          <v-row>\r\n            <v-col style=\"text-align:left\">\r\n              <span class=\"question\">2.{{questions[1].text}}{{course.course_name}}</span>\r\n              <v-textarea color=\"#5c6ac4\" auto-grow  rows=\"1\"></v-textarea>\r\n            </v-col>\r\n          </v-row>\r\n          <v-row>\r\n            <v-col style=\"text-align:left\">\r\n              <span class=\"question\">3.{{questions[2].text}}</span>\r\n              <v-textarea color=\"#5c6ac4\" auto-grow  rows=\"1\"></v-textarea>\r\n            </v-col>\r\n          </v-row>\r\n          <v-row>\r\n            <v-col class=\"d-none d-md-block\">\r\n            </v-col>\r\n            <v-col>\r\n              <v-btn class=\"indigo--text text--lighten-1\" rounded color=\"#FFCC80\" @click=\"submit_survey\">Submit</v-btn>\r\n            </v-col>\r\n          </v-row>\r\n          <v-row>\r\n            <v-col></v-col>\r\n          </v-row>\r\n          <v-row>\r\n            <v-col></v-col>\r\n          </v-row>\r\n        </v-card>\r\n        <!--  -->\r\n      </v-col>\r\n      <v-col cols=\"12\" md=\"1\"></v-col>\r\n    </v-row>\r\n    <v-img class=\"d-none d-md-block\" id=\"img1\" src=\"../assets/opinion.png\"></v-img>\r\n    <v-img class=\"d-none d-md-block\" id=\"img2\" src=\"../assets/surveytime.png\"></v-img>\r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      course_id:'',\r\n      questions: [\r\n        {\r\n          text: \"List three points you have learned.\"\r\n        },\r\n        {\r\n          text: \"Describe your opinions on \"\r\n        },\r\n        {\r\n          text:\r\n            \"From 1 to 5, how do you rate this seminar? Please briefly state your reasons.\"\r\n        }\r\n      ]\r\n    };\r\n  },\r\n  methods:{\r\n    showSnackbar(text,color){\r\n      this.$store.commit('SET_SNACKBAR',{\r\n        showing:true,\r\n        text:text,\r\n        color:color\r\n      })\r\n    },\r\n   async submit_survey(){\r\n      let sendData = new FormData()\r\n      sendData.append('username',window.localStorage.getItem('username'))\r\n      sendData.append('course_id',this.course_id)\r\n      let res = await this.$store.dispatch('callAPI',{\r\n        send:sendData,\r\n        branch:'/user_pass_survey/',\r\n        call:'DO_NOTHING',\r\n        setData:{}\r\n      })\r\n      if(res.code == '1'){\r\n        this.$router.push(\"/submit_sv\")\r\n      }\r\n      else{\r\n        this.showSnackbar('Error when submit survey','error')\r\n      }\r\n\r\n    }\r\n  },\r\n  computed:{\r\n    course(){\r\n      return this.$store.getters.findCourseById(this.course_id)\r\n    }\r\n  },\r\n  mounted(){\r\n    this.course_id = this.$route.params.id\r\n  }\r\n\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n#title {\r\n  color: #5c6ac4;\r\n}\r\n#img1 {\r\n  position: absolute;\r\n\r\n  left: 0;\r\n  bottom: 0;\r\n}\r\n#img2 {\r\n  position: absolute;\r\n  right: 8em;\r\n  top: 0;\r\n}\r\n#card1 {\r\n  border-radius: 50px;\r\n  border-color: #e3d0ff !important;\r\n  border-width: 1px;\r\n}\r\n.question {\r\n  color: #5c6ac4;\r\n}\r\n</style>"],"sourceRoot":"src/views"}]}