{"remainingRequest":"C:\\Users\\Nathan\\Desktop\\github-repository\\icontinu-app-front\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Nathan\\Desktop\\github-repository\\icontinu-app-front\\node_modules\\vuetify\\lib\\components\\VAutocomplete\\VAutocomplete.js","dependencies":[{"path":"C:\\Users\\Nathan\\Desktop\\github-repository\\icontinu-app-front\\node_modules\\vuetify\\lib\\components\\VAutocomplete\\VAutocomplete.js","mtime":499162500000},{"path":"C:\\Users\\Nathan\\Desktop\\github-repository\\icontinu-app-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Nathan\\Desktop\\github-repository\\icontinu-app-front\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// Styles\nimport \"../../../src/components/VAutocomplete/VAutocomplete.sass\"; // Extensions\n\nimport VSelect, { defaultMenuProps as VSelectMenuProps } from '../VSelect/VSelect';\nimport VTextField from '../VTextField/VTextField'; // Utilities\n\nimport { keyCodes } from '../../util/helpers';\n\nvar defaultMenuProps = _objectSpread({}, VSelectMenuProps, {\n  offsetY: true,\n  offsetOverflow: true,\n  transition: false\n});\n/* @vue/component */\n\n\nexport default VSelect.extend({\n  name: 'v-autocomplete',\n  props: {\n    allowOverflow: {\n      type: Boolean,\n      default: true\n    },\n    autoSelectFirst: {\n      type: Boolean,\n      default: false\n    },\n    filter: {\n      type: Function,\n      default: function _default(item, queryText, itemText) {\n        return itemText.toLocaleLowerCase().indexOf(queryText.toLocaleLowerCase()) > -1;\n      }\n    },\n    hideNoData: Boolean,\n    menuProps: {\n      type: VSelect.options.props.menuProps.type,\n      default: function _default() {\n        return defaultMenuProps;\n      }\n    },\n    noFilter: Boolean,\n    searchInput: {\n      type: String,\n      default: undefined\n    }\n  },\n  data: function data() {\n    return {\n      lazySearch: this.searchInput\n    };\n  },\n  computed: {\n    classes: function classes() {\n      return _objectSpread({}, VSelect.options.computed.classes.call(this), {\n        'v-autocomplete': true,\n        'v-autocomplete--is-selecting-index': this.selectedIndex > -1\n      });\n    },\n    computedItems: function computedItems() {\n      return this.filteredItems;\n    },\n    selectedValues: function selectedValues() {\n      var _this = this;\n\n      return this.selectedItems.map(function (item) {\n        return _this.getValue(item);\n      });\n    },\n    hasDisplayedItems: function hasDisplayedItems() {\n      var _this2 = this;\n\n      return this.hideSelected ? this.filteredItems.some(function (item) {\n        return !_this2.hasItem(item);\n      }) : this.filteredItems.length > 0;\n    },\n    currentRange: function currentRange() {\n      if (this.selectedItem == null) return 0;\n      return String(this.getText(this.selectedItem)).length;\n    },\n    filteredItems: function filteredItems() {\n      var _this3 = this;\n\n      if (!this.isSearching || this.noFilter || this.internalSearch == null) return this.allItems;\n      return this.allItems.filter(function (item) {\n        return _this3.filter(item, String(_this3.internalSearch), String(_this3.getText(item)));\n      });\n    },\n    internalSearch: {\n      get: function get() {\n        return this.lazySearch;\n      },\n      set: function set(val) {\n        this.lazySearch = val;\n        this.$emit('update:search-input', val);\n      }\n    },\n    isAnyValueAllowed: function isAnyValueAllowed() {\n      return false;\n    },\n    isDirty: function isDirty() {\n      return this.searchIsDirty || this.selectedItems.length > 0;\n    },\n    isSearching: function isSearching() {\n      return this.multiple && this.searchIsDirty || this.searchIsDirty && this.internalSearch !== this.getText(this.selectedItem);\n    },\n    menuCanShow: function menuCanShow() {\n      if (!this.isFocused) return false;\n      return this.hasDisplayedItems || !this.hideNoData;\n    },\n    $_menuProps: function $_menuProps() {\n      var props = VSelect.options.computed.$_menuProps.call(this);\n      props.contentClass = \"v-autocomplete__content \".concat(props.contentClass || '').trim();\n      return _objectSpread({}, defaultMenuProps, {}, props);\n    },\n    searchIsDirty: function searchIsDirty() {\n      return this.internalSearch != null && this.internalSearch !== '';\n    },\n    selectedItem: function selectedItem() {\n      var _this4 = this;\n\n      if (this.multiple) return null;\n      return this.selectedItems.find(function (i) {\n        return _this4.valueComparator(_this4.getValue(i), _this4.getValue(_this4.internalValue));\n      });\n    },\n    listData: function listData() {\n      var data = VSelect.options.computed.listData.call(this);\n      data.props = _objectSpread({}, data.props, {\n        items: this.virtualizedItems,\n        noFilter: this.noFilter || !this.isSearching || !this.filteredItems.length,\n        searchInput: this.internalSearch\n      });\n      return data;\n    }\n  },\n  watch: {\n    filteredItems: 'onFilteredItemsChanged',\n    internalValue: 'setSearch',\n    isFocused: function isFocused(val) {\n      if (val) {\n        this.$refs.input && this.$refs.input.select();\n      } else {\n        this.updateSelf();\n      }\n    },\n    isMenuActive: function isMenuActive(val) {\n      if (val || !this.hasSlot) return;\n      this.lazySearch = undefined;\n    },\n    items: function items(val, oldVal) {\n      // If we are focused, the menu\n      // is not active, hide no data is enabled,\n      // and items change\n      // User is probably async loading\n      // items, try to activate the menu\n      if (!(oldVal && oldVal.length) && this.hideNoData && this.isFocused && !this.isMenuActive && val.length) this.activateMenu();\n    },\n    searchInput: function searchInput(val) {\n      this.lazySearch = val;\n    },\n    internalSearch: 'onInternalSearchChanged',\n    itemText: 'updateSelf'\n  },\n  created: function created() {\n    this.setSearch();\n  },\n  methods: {\n    onFilteredItemsChanged: function onFilteredItemsChanged(val, oldVal) {\n      var _this5 = this;\n\n      // TODO: How is the watcher triggered\n      // for duplicate items? no idea\n      if (val === oldVal) return;\n      this.setMenuIndex(-1);\n      this.$nextTick(function () {\n        if (!_this5.internalSearch || val.length !== 1 && !_this5.autoSelectFirst) return;\n\n        _this5.$refs.menu.getTiles();\n\n        _this5.setMenuIndex(0);\n      });\n    },\n    onInternalSearchChanged: function onInternalSearchChanged() {\n      this.updateMenuDimensions();\n    },\n    updateMenuDimensions: function updateMenuDimensions() {\n      // Type from menuable is not making it through\n      this.isMenuActive && this.$refs.menu && this.$refs.menu.updateDimensions();\n    },\n    changeSelectedIndex: function changeSelectedIndex(keyCode) {\n      // Do not allow changing of selectedIndex\n      // when search is dirty\n      if (this.searchIsDirty) return;\n      if (![keyCodes.backspace, keyCodes.left, keyCodes.right, keyCodes.delete].includes(keyCode)) return;\n      var index = this.selectedItems.length - 1;\n\n      if (keyCode === keyCodes.left) {\n        if (this.selectedIndex === -1) {\n          this.selectedIndex = index;\n        } else {\n          this.selectedIndex--;\n        }\n      } else if (keyCode === keyCodes.right) {\n        if (this.selectedIndex >= index) {\n          this.selectedIndex = -1;\n        } else {\n          this.selectedIndex++;\n        }\n      } else if (this.selectedIndex === -1) {\n        this.selectedIndex = index;\n        return;\n      }\n\n      var currentItem = this.selectedItems[this.selectedIndex];\n\n      if ([keyCodes.backspace, keyCodes.delete].includes(keyCode) && !this.getDisabled(currentItem)) {\n        var newIndex = this.selectedIndex === index ? this.selectedIndex - 1 : this.selectedItems[this.selectedIndex + 1] ? this.selectedIndex : -1;\n\n        if (newIndex === -1) {\n          this.setValue(this.multiple ? [] : undefined);\n        } else {\n          this.selectItem(currentItem);\n        }\n\n        this.selectedIndex = newIndex;\n      }\n    },\n    clearableCallback: function clearableCallback() {\n      this.internalSearch = undefined;\n      VSelect.options.methods.clearableCallback.call(this);\n    },\n    genInput: function genInput() {\n      var input = VTextField.options.methods.genInput.call(this);\n      input.data = input.data || {};\n      input.data.attrs = input.data.attrs || {};\n      input.data.domProps = input.data.domProps || {};\n      input.data.domProps.value = this.internalSearch;\n      return input;\n    },\n    genInputSlot: function genInputSlot() {\n      var slot = VSelect.options.methods.genInputSlot.call(this);\n      slot.data.attrs.role = 'combobox';\n      return slot;\n    },\n    genSelections: function genSelections() {\n      return this.hasSlot || this.multiple ? VSelect.options.methods.genSelections.call(this) : [];\n    },\n    onClick: function onClick() {\n      if (this.isDisabled) return;\n      this.selectedIndex > -1 ? this.selectedIndex = -1 : this.onFocus();\n      this.activateMenu();\n    },\n    onInput: function onInput(e) {\n      if (this.selectedIndex > -1 || !e.target) return;\n      var target = e.target;\n      var value = target.value; // If typing and menu is not currently active\n\n      if (target.value) this.activateMenu();\n      this.internalSearch = value;\n      this.badInput = target.validity && target.validity.badInput;\n    },\n    onKeyDown: function onKeyDown(e) {\n      var keyCode = e.keyCode;\n      VSelect.options.methods.onKeyDown.call(this, e); // The ordering is important here\n      // allows new value to be updated\n      // and then moves the index to the\n      // proper location\n\n      this.changeSelectedIndex(keyCode);\n    },\n    onSpaceDown: function onSpaceDown(e) {},\n    onTabDown: function onTabDown(e) {\n      VSelect.options.methods.onTabDown.call(this, e);\n      this.updateSelf();\n    },\n    onUpDown: function onUpDown() {\n      // For autocomplete / combobox, cycling\n      // interfers with native up/down behavior\n      // instead activate the menu\n      this.activateMenu();\n    },\n    selectItem: function selectItem(item) {\n      VSelect.options.methods.selectItem.call(this, item);\n      this.setSearch();\n    },\n    setSelectedItems: function setSelectedItems() {\n      VSelect.options.methods.setSelectedItems.call(this); // #4273 Don't replace if searching\n      // #4403 Don't replace if focused\n\n      if (!this.isFocused) this.setSearch();\n    },\n    setSearch: function setSearch() {\n      var _this6 = this;\n\n      // Wait for nextTick so selectedItem\n      // has had time to update\n      this.$nextTick(function () {\n        if (!_this6.multiple || !_this6.internalSearch || !_this6.isMenuActive) {\n          _this6.internalSearch = !_this6.selectedItems.length || _this6.multiple || _this6.hasSlot ? null : _this6.getText(_this6.selectedItem);\n        }\n      });\n    },\n    updateSelf: function updateSelf() {\n      if (!this.searchIsDirty && !this.internalValue) return;\n\n      if (!this.valueComparator(this.internalSearch, this.getValue(this.internalValue))) {\n        this.setSearch();\n      }\n    },\n    hasItem: function hasItem(item) {\n      return this.selectedValues.indexOf(this.getValue(item)) > -1;\n    },\n    onFocus: function onFocus() {\n      if (!this.isFocused) {\n        document.addEventListener('copy', this.onCopy);\n      }\n\n      VTextField.options.methods.onFocus.call(this);\n    },\n    onBlur: function onBlur() {\n      document.removeEventListener('copy', this.onCopy);\n      VSelect.options.methods.onBlur.call(this);\n    },\n    onCopy: function onCopy(event) {\n      if (this.selectedIndex === -1) return;\n      var currentItem = this.selectedItems[this.selectedIndex];\n      var currentItemText = this.getText(currentItem);\n      event.clipboardData.setData('text/plain', currentItemText);\n      event.clipboardData.setData('text/vnd.vuetify.autocomplete.item+plain', currentItemText);\n      event.preventDefault();\n    }\n  }\n});",{"version":3,"sources":["C:\\Users\\Nathan\\Desktop\\github-repository\\icontinu-app-front\\node_modules\\vuetify\\lib\\components\\VAutocomplete\\VAutocomplete.js"],"names":["VSelect","defaultMenuProps","VSelectMenuProps","VTextField","keyCodes","offsetY","offsetOverflow","transition","extend","name","props","allowOverflow","type","Boolean","default","autoSelectFirst","filter","Function","item","queryText","itemText","toLocaleLowerCase","indexOf","hideNoData","menuProps","options","noFilter","searchInput","String","undefined","data","lazySearch","computed","classes","call","selectedIndex","computedItems","filteredItems","selectedValues","selectedItems","map","getValue","hasDisplayedItems","hideSelected","some","hasItem","length","currentRange","selectedItem","getText","isSearching","internalSearch","allItems","get","set","val","$emit","isAnyValueAllowed","isDirty","searchIsDirty","multiple","menuCanShow","isFocused","$_menuProps","contentClass","trim","find","i","valueComparator","internalValue","listData","items","virtualizedItems","watch","$refs","input","select","updateSelf","isMenuActive","hasSlot","oldVal","activateMenu","created","setSearch","methods","onFilteredItemsChanged","setMenuIndex","$nextTick","menu","getTiles","onInternalSearchChanged","updateMenuDimensions","updateDimensions","changeSelectedIndex","keyCode","backspace","left","right","delete","includes","index","currentItem","getDisabled","newIndex","setValue","selectItem","clearableCallback","genInput","attrs","domProps","value","genInputSlot","slot","role","genSelections","onClick","isDisabled","onFocus","onInput","e","target","badInput","validity","onKeyDown","onSpaceDown","onTabDown","onUpDown","setSelectedItems","document","addEventListener","onCopy","onBlur","removeEventListener","event","currentItemText","clipboardData","setData","preventDefault"],"mappings":"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","sourcesContent":["// Styles\nimport \"../../../src/components/VAutocomplete/VAutocomplete.sass\"; // Extensions\n\nimport VSelect, { defaultMenuProps as VSelectMenuProps } from '../VSelect/VSelect';\nimport VTextField from '../VTextField/VTextField'; // Utilities\n\nimport { keyCodes } from '../../util/helpers';\nconst defaultMenuProps = { ...VSelectMenuProps,\n  offsetY: true,\n  offsetOverflow: true,\n  transition: false\n};\n/* @vue/component */\n\nexport default VSelect.extend({\n  name: 'v-autocomplete',\n  props: {\n    allowOverflow: {\n      type: Boolean,\n      default: true\n    },\n    autoSelectFirst: {\n      type: Boolean,\n      default: false\n    },\n    filter: {\n      type: Function,\n      default: (item, queryText, itemText) => {\n        return itemText.toLocaleLowerCase().indexOf(queryText.toLocaleLowerCase()) > -1;\n      }\n    },\n    hideNoData: Boolean,\n    menuProps: {\n      type: VSelect.options.props.menuProps.type,\n      default: () => defaultMenuProps\n    },\n    noFilter: Boolean,\n    searchInput: {\n      type: String,\n      default: undefined\n    }\n  },\n\n  data() {\n    return {\n      lazySearch: this.searchInput\n    };\n  },\n\n  computed: {\n    classes() {\n      return { ...VSelect.options.computed.classes.call(this),\n        'v-autocomplete': true,\n        'v-autocomplete--is-selecting-index': this.selectedIndex > -1\n      };\n    },\n\n    computedItems() {\n      return this.filteredItems;\n    },\n\n    selectedValues() {\n      return this.selectedItems.map(item => this.getValue(item));\n    },\n\n    hasDisplayedItems() {\n      return this.hideSelected ? this.filteredItems.some(item => !this.hasItem(item)) : this.filteredItems.length > 0;\n    },\n\n    currentRange() {\n      if (this.selectedItem == null) return 0;\n      return String(this.getText(this.selectedItem)).length;\n    },\n\n    filteredItems() {\n      if (!this.isSearching || this.noFilter || this.internalSearch == null) return this.allItems;\n      return this.allItems.filter(item => this.filter(item, String(this.internalSearch), String(this.getText(item))));\n    },\n\n    internalSearch: {\n      get() {\n        return this.lazySearch;\n      },\n\n      set(val) {\n        this.lazySearch = val;\n        this.$emit('update:search-input', val);\n      }\n\n    },\n\n    isAnyValueAllowed() {\n      return false;\n    },\n\n    isDirty() {\n      return this.searchIsDirty || this.selectedItems.length > 0;\n    },\n\n    isSearching() {\n      return this.multiple && this.searchIsDirty || this.searchIsDirty && this.internalSearch !== this.getText(this.selectedItem);\n    },\n\n    menuCanShow() {\n      if (!this.isFocused) return false;\n      return this.hasDisplayedItems || !this.hideNoData;\n    },\n\n    $_menuProps() {\n      const props = VSelect.options.computed.$_menuProps.call(this);\n      props.contentClass = `v-autocomplete__content ${props.contentClass || ''}`.trim();\n      return { ...defaultMenuProps,\n        ...props\n      };\n    },\n\n    searchIsDirty() {\n      return this.internalSearch != null && this.internalSearch !== '';\n    },\n\n    selectedItem() {\n      if (this.multiple) return null;\n      return this.selectedItems.find(i => {\n        return this.valueComparator(this.getValue(i), this.getValue(this.internalValue));\n      });\n    },\n\n    listData() {\n      const data = VSelect.options.computed.listData.call(this);\n      data.props = { ...data.props,\n        items: this.virtualizedItems,\n        noFilter: this.noFilter || !this.isSearching || !this.filteredItems.length,\n        searchInput: this.internalSearch\n      };\n      return data;\n    }\n\n  },\n  watch: {\n    filteredItems: 'onFilteredItemsChanged',\n    internalValue: 'setSearch',\n\n    isFocused(val) {\n      if (val) {\n        this.$refs.input && this.$refs.input.select();\n      } else {\n        this.updateSelf();\n      }\n    },\n\n    isMenuActive(val) {\n      if (val || !this.hasSlot) return;\n      this.lazySearch = undefined;\n    },\n\n    items(val, oldVal) {\n      // If we are focused, the menu\n      // is not active, hide no data is enabled,\n      // and items change\n      // User is probably async loading\n      // items, try to activate the menu\n      if (!(oldVal && oldVal.length) && this.hideNoData && this.isFocused && !this.isMenuActive && val.length) this.activateMenu();\n    },\n\n    searchInput(val) {\n      this.lazySearch = val;\n    },\n\n    internalSearch: 'onInternalSearchChanged',\n    itemText: 'updateSelf'\n  },\n\n  created() {\n    this.setSearch();\n  },\n\n  methods: {\n    onFilteredItemsChanged(val, oldVal) {\n      // TODO: How is the watcher triggered\n      // for duplicate items? no idea\n      if (val === oldVal) return;\n      this.setMenuIndex(-1);\n      this.$nextTick(() => {\n        if (!this.internalSearch || val.length !== 1 && !this.autoSelectFirst) return;\n        this.$refs.menu.getTiles();\n        this.setMenuIndex(0);\n      });\n    },\n\n    onInternalSearchChanged() {\n      this.updateMenuDimensions();\n    },\n\n    updateMenuDimensions() {\n      // Type from menuable is not making it through\n      this.isMenuActive && this.$refs.menu && this.$refs.menu.updateDimensions();\n    },\n\n    changeSelectedIndex(keyCode) {\n      // Do not allow changing of selectedIndex\n      // when search is dirty\n      if (this.searchIsDirty) return;\n      if (![keyCodes.backspace, keyCodes.left, keyCodes.right, keyCodes.delete].includes(keyCode)) return;\n      const index = this.selectedItems.length - 1;\n\n      if (keyCode === keyCodes.left) {\n        if (this.selectedIndex === -1) {\n          this.selectedIndex = index;\n        } else {\n          this.selectedIndex--;\n        }\n      } else if (keyCode === keyCodes.right) {\n        if (this.selectedIndex >= index) {\n          this.selectedIndex = -1;\n        } else {\n          this.selectedIndex++;\n        }\n      } else if (this.selectedIndex === -1) {\n        this.selectedIndex = index;\n        return;\n      }\n\n      const currentItem = this.selectedItems[this.selectedIndex];\n\n      if ([keyCodes.backspace, keyCodes.delete].includes(keyCode) && !this.getDisabled(currentItem)) {\n        const newIndex = this.selectedIndex === index ? this.selectedIndex - 1 : this.selectedItems[this.selectedIndex + 1] ? this.selectedIndex : -1;\n\n        if (newIndex === -1) {\n          this.setValue(this.multiple ? [] : undefined);\n        } else {\n          this.selectItem(currentItem);\n        }\n\n        this.selectedIndex = newIndex;\n      }\n    },\n\n    clearableCallback() {\n      this.internalSearch = undefined;\n      VSelect.options.methods.clearableCallback.call(this);\n    },\n\n    genInput() {\n      const input = VTextField.options.methods.genInput.call(this);\n      input.data = input.data || {};\n      input.data.attrs = input.data.attrs || {};\n      input.data.domProps = input.data.domProps || {};\n      input.data.domProps.value = this.internalSearch;\n      return input;\n    },\n\n    genInputSlot() {\n      const slot = VSelect.options.methods.genInputSlot.call(this);\n      slot.data.attrs.role = 'combobox';\n      return slot;\n    },\n\n    genSelections() {\n      return this.hasSlot || this.multiple ? VSelect.options.methods.genSelections.call(this) : [];\n    },\n\n    onClick() {\n      if (this.isDisabled) return;\n      this.selectedIndex > -1 ? this.selectedIndex = -1 : this.onFocus();\n      this.activateMenu();\n    },\n\n    onInput(e) {\n      if (this.selectedIndex > -1 || !e.target) return;\n      const target = e.target;\n      const value = target.value; // If typing and menu is not currently active\n\n      if (target.value) this.activateMenu();\n      this.internalSearch = value;\n      this.badInput = target.validity && target.validity.badInput;\n    },\n\n    onKeyDown(e) {\n      const keyCode = e.keyCode;\n      VSelect.options.methods.onKeyDown.call(this, e); // The ordering is important here\n      // allows new value to be updated\n      // and then moves the index to the\n      // proper location\n\n      this.changeSelectedIndex(keyCode);\n    },\n\n    onSpaceDown(e) {},\n\n    onTabDown(e) {\n      VSelect.options.methods.onTabDown.call(this, e);\n      this.updateSelf();\n    },\n\n    onUpDown() {\n      // For autocomplete / combobox, cycling\n      // interfers with native up/down behavior\n      // instead activate the menu\n      this.activateMenu();\n    },\n\n    selectItem(item) {\n      VSelect.options.methods.selectItem.call(this, item);\n      this.setSearch();\n    },\n\n    setSelectedItems() {\n      VSelect.options.methods.setSelectedItems.call(this); // #4273 Don't replace if searching\n      // #4403 Don't replace if focused\n\n      if (!this.isFocused) this.setSearch();\n    },\n\n    setSearch() {\n      // Wait for nextTick so selectedItem\n      // has had time to update\n      this.$nextTick(() => {\n        if (!this.multiple || !this.internalSearch || !this.isMenuActive) {\n          this.internalSearch = !this.selectedItems.length || this.multiple || this.hasSlot ? null : this.getText(this.selectedItem);\n        }\n      });\n    },\n\n    updateSelf() {\n      if (!this.searchIsDirty && !this.internalValue) return;\n\n      if (!this.valueComparator(this.internalSearch, this.getValue(this.internalValue))) {\n        this.setSearch();\n      }\n    },\n\n    hasItem(item) {\n      return this.selectedValues.indexOf(this.getValue(item)) > -1;\n    },\n\n    onFocus() {\n      if (!this.isFocused) {\n        document.addEventListener('copy', this.onCopy);\n      }\n\n      VTextField.options.methods.onFocus.call(this);\n    },\n\n    onBlur() {\n      document.removeEventListener('copy', this.onCopy);\n      VSelect.options.methods.onBlur.call(this);\n    },\n\n    onCopy(event) {\n      if (this.selectedIndex === -1) return;\n      const currentItem = this.selectedItems[this.selectedIndex];\n      const currentItemText = this.getText(currentItem);\n      event.clipboardData.setData('text/plain', currentItemText);\n      event.clipboardData.setData('text/vnd.vuetify.autocomplete.item+plain', currentItemText);\n      event.preventDefault();\n    }\n\n  }\n});\n//# sourceMappingURL=VAutocomplete.js.map"]}]}