{"remainingRequest":"C:\\Users\\Nathan\\Desktop\\github-repository\\icontinu-app-front\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\Nathan\\Desktop\\github-repository\\icontinu-app-front\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Nathan\\Desktop\\github-repository\\icontinu-app-front\\node_modules\\vuetify-loader\\lib\\loader.js!C:\\Users\\Nathan\\Desktop\\github-repository\\icontinu-app-front\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Nathan\\Desktop\\github-repository\\icontinu-app-front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Nathan\\Desktop\\github-repository\\icontinu-app-front\\src\\views\\ManageScan.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Nathan\\Desktop\\github-repository\\icontinu-app-front\\src\\views\\ManageScan.vue","mtime":1571070863723},{"path":"C:\\Users\\Nathan\\Desktop\\github-repository\\icontinu-app-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Nathan\\Desktop\\github-repository\\icontinu-app-front\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Nathan\\Desktop\\github-repository\\icontinu-app-front\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Nathan\\Desktop\\github-repository\\icontinu-app-front\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1564062719000},{"path":"C:\\Users\\Nathan\\Desktop\\github-repository\\icontinu-app-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Nathan\\Desktop\\github-repository\\icontinu-app-front\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"C:\\\\Users\\\\Nathan\\\\Desktop\\\\github-repository\\\\icontinu-app-front\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { QrcodeStream } from \"vue-qrcode-reader\";\nexport default {\n  components: {\n    QrcodeStream: QrcodeStream\n  },\n  data: function data() {\n    return {\n      overlay: false\n    };\n  },\n  methods: {\n    open: function open(title, color) {\n      this.$store.commit(\"SET_SNACKBAR\", {\n        showing: true,\n        text: title,\n        color: color\n      });\n    },\n    refresh: function refresh() {\n      location.reload();\n    },\n    verifyQR: function () {\n      var _verifyQR = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(obj) {\n        var send, res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                send = new FormData();\n                send.append(\"username\", obj.username);\n                send.append(\"course_id\", obj.course);\n                console.log(send.get('username'));\n                console.log(send.get('course_id'));\n                _context.next = 7;\n                return this.$store.dispatch(\"callAPI\", {\n                  send: send,\n                  branch: \"/verify_user_enrollment/\",\n                  call: \"DO_NOTHING\",\n                  setData: {}\n                });\n\n              case 7:\n                res = _context.sent;\n\n                if (res.code == \"1\") {\n                  this.open(res.message, \"success\");\n                  this.callFacePage(obj);\n                } else {\n                  this.open(res.message, \"error\");\n                }\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function verifyQR(_x) {\n        return _verifyQR.apply(this, arguments);\n      }\n\n      return verifyQR;\n    }(),\n    callFacePage: function () {\n      var _callFacePage = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(obj) {\n        var send, res;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                send = new FormData();\n                send.append(\"id\", obj.id);\n                this.overlay = true;\n                _context2.next = 5;\n                return this.$store.dispatch(\"callAPI\", {\n                  send: send,\n                  branch: \"/scan_qr/\",\n                  call: \"DO_NOTHING\",\n                  setData: {}\n                });\n\n              case 5:\n                res = _context2.sent;\n                this.overlay = false;\n\n                if (res.code == \"scanning\") {\n                  this.open(res.message + \" [code:\" + res.code + \"]\", \"success\");\n                  window.setTimeout(this.tellParrent, 1000 * 3); // this.tellParrent();\n                } else {\n                  this.open(res.message + \" [code:\" + res.code + \"]\", \"error\");\n                }\n\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function callFacePage(_x2) {\n        return _callFacePage.apply(this, arguments);\n      }\n\n      return callFacePage;\n    }(),\n    onDecode: function () {\n      var _onDecode = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(str) {\n        var obj;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (str.length == 0) {\n                  this.refresh();\n                }\n\n                console.log(str);\n                _context3.prev = 2;\n                obj = JSON.parse(str);\n\n                if (!(obj.id == undefined)) {\n                  _context3.next = 7;\n                  break;\n                }\n\n                this.open(\"Please show valid QR code\", \"error\");\n                return _context3.abrupt(\"return\");\n\n              case 7:\n                console.log(obj.id);\n                _context3.next = 14;\n                break;\n\n              case 10:\n                _context3.prev = 10;\n                _context3.t0 = _context3[\"catch\"](2);\n                this.open(\"Please show valid QR code\", \"error\");\n                return _context3.abrupt(\"return\");\n\n              case 14:\n                this.verifyQR(obj);\n\n              case 15:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[2, 10]]);\n      }));\n\n      function onDecode(_x3) {\n        return _onDecode.apply(this, arguments);\n      }\n\n      return onDecode;\n    }(),\n    goFaceScan: function goFaceScan() {\n      this.$stores.dispatch(\"isQR_Verfied\");\n    },\n    onInit: function () {\n      var _onInit = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(promise) {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.prev = 0;\n                _context4.next = 3;\n                return promise;\n\n              case 3:\n                _context4.next = 8;\n                break;\n\n              case 5:\n                _context4.prev = 5;\n                _context4.t0 = _context4[\"catch\"](0);\n\n                if (_context4.t0.name === \"NotAllowedError\") {\n                  this.error = \"ERROR: you need to grant camera access permisson\";\n                } else if (_context4.t0.name === \"NotFoundError\") {\n                  this.error = \"ERROR: no camera on this device\";\n                } else if (_context4.t0.name === \"NotSupportedError\") {\n                  this.error = \"ERROR: secure context required (HTTPS, localhost)\";\n                } else if (_context4.t0.name === \"NotReadableError\") {\n                  this.error = \"ERROR: is the camera already in use?\";\n                } else if (_context4.t0.name === \"OverconstrainedError\") {\n                  this.error = \"ERROR: installed cameras are not suitable\";\n                } else if (_context4.t0.name === \"StreamApiNotSupportedError\") {\n                  this.error = \"ERROR: Stream API is not supported in this browser\";\n                }\n\n              case 8:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this, [[0, 5]]);\n      }));\n\n      function onInit(_x4) {\n        return _onInit.apply(this, arguments);\n      }\n\n      return onInit;\n    }()\n  }\n};",{"version":3,"sources":["ManageScan.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n<v-row>\r\n  <v-col cols=\"12\" md=\"2\"> </v-col>\r\n  <v-col cols=\"12\" md=\"8\">\r\n<v-overlay v-model=\"overlay\" z-index=\"10000\">Verifying, please wait...</v-overlay>\r\n    <div>\r\n      <h1>QR CODE SCAN</h1>\r\n    </div>\r\n    <v-card outlined class=\"pa-2\">\r\n      <div class=\"ma-1\">\r\n        <qrcode-stream @decode=\"onDecode\" @init=\"onInit\" />\r\n      </div>\r\n      <div class=\"ma-1\">\r\n        <v-btn id=\"submitbtn\" color=\"rgb(231,113,51)\" dark @click=\"refresh\">Refresh</v-btn>\r\n      </div>\r\n    </v-card>\r\n    <div class=\"text-center\">\r\n      <canvas id=\"canvas\" width=\"640\" height=\"480\" style=\"display: none;\"></canvas>\r\n    </div>\r\n  </v-col>\r\n  <v-col cols=\"12\" md=\"2\">  </v-col>\r\n</v-row>\r\n</template>\r\n\r\n<script>\r\nimport { QrcodeStream } from \"vue-qrcode-reader\";\r\nexport default {\r\n  components: {\r\n    QrcodeStream\r\n  },\r\n  data() {\r\n    return {\r\n      overlay: false\r\n    };\r\n  },\r\n  methods: {\r\n    open(title, color) {\r\n      this.$store.commit(\"SET_SNACKBAR\", {\r\n        showing: true,\r\n        text: title,\r\n        color: color\r\n      });\r\n    },\r\n    refresh() {\r\n      location.reload();\r\n    },\r\n    async verifyQR(obj) {\r\n      let send = new FormData();\r\n      send.append(\"username\", obj.username);\r\n      send.append(\"course_id\", obj.course);\r\n      console.log(send.get('username'))\r\n      console.log(send.get('course_id'))\r\n      let res = await this.$store.dispatch(\"callAPI\", {\r\n        send: send,\r\n        branch: \"/verify_user_enrollment/\",\r\n        call: \"DO_NOTHING\",\r\n        setData: {}\r\n      });\r\n      if (res.code == \"1\") {\r\n        this.open(res.message, \"success\");\r\n        this.callFacePage(obj);\r\n      } else {\r\n        this.open(res.message, \"error\");\r\n      }\r\n    },\r\n    async callFacePage(obj) {\r\n      let send = new FormData();\r\n      send.append(\"id\", obj.id);\r\n      this.overlay = true;\r\n\r\n      let res = await this.$store.dispatch(\"callAPI\", {\r\n        send: send,\r\n        branch: \"/scan_qr/\",\r\n        call: \"DO_NOTHING\",\r\n        setData: {}\r\n      });\r\n      this.overlay = false;\r\n      if (res.code == \"scanning\") {\r\n        this.open(\r\n          res.message + \" [code:\" + res.code + \"]\",\r\n          \"success\"\r\n        );\r\n        window.setTimeout(this.tellParrent, 1000 * 3);\r\n        // this.tellParrent();\r\n      } else {\r\n        this.open(res.message + \" [code:\" + res.code + \"]\", \"error\");\r\n      }\r\n    },\r\n    async onDecode(str) {\r\n      if (str.length == 0) {\r\n        this.refresh();\r\n      }\r\n      console.log(str);\r\n\r\n      let obj;\r\n      try {\r\n        obj = JSON.parse(str);\r\n        if (obj.id == undefined) {\r\n          this.open(\"Please show valid QR code\", \"error\");\r\n          return;\r\n        }\r\n        console.log(obj.id);\r\n      } catch {\r\n        this.open(\"Please show valid QR code\", \"error\");\r\n        return;\r\n      }\r\n\r\n      this.verifyQR(obj);\r\n    },\r\n    goFaceScan() {\r\n      this.$stores.dispatch(\"isQR_Verfied\");\r\n    },\r\n    async onInit(promise) {\r\n      try {\r\n        await promise;\r\n      } catch (error) {\r\n        if (error.name === \"NotAllowedError\") {\r\n          this.error = \"ERROR: you need to grant camera access permisson\";\r\n        } else if (error.name === \"NotFoundError\") {\r\n          this.error = \"ERROR: no camera on this device\";\r\n        } else if (error.name === \"NotSupportedError\") {\r\n          this.error = \"ERROR: secure context required (HTTPS, localhost)\";\r\n        } else if (error.name === \"NotReadableError\") {\r\n          this.error = \"ERROR: is the camera already in use?\";\r\n        } else if (error.name === \"OverconstrainedError\") {\r\n          this.error = \"ERROR: installed cameras are not suitable\";\r\n        } else if (error.name === \"StreamApiNotSupportedError\") {\r\n          this.error = \"ERROR: Stream API is not supported in this browser\";\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>"],"sourceRoot":"src/views"}]}