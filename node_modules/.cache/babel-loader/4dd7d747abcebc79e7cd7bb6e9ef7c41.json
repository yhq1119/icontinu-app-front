{"remainingRequest":"C:\\Users\\Nathan\\Desktop\\github-repository\\icontinu-app-front\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Nathan\\Desktop\\github-repository\\icontinu-app-front\\node_modules\\vuetify-loader\\lib\\loader.js!C:\\Users\\Nathan\\Desktop\\github-repository\\icontinu-app-front\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Nathan\\Desktop\\github-repository\\icontinu-app-front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Nathan\\Desktop\\github-repository\\icontinu-app-front\\src\\components\\WebCam.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Nathan\\Desktop\\github-repository\\icontinu-app-front\\src\\components\\WebCam.vue","mtime":1571167312837},{"path":"C:\\Users\\Nathan\\Desktop\\github-repository\\icontinu-app-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Nathan\\Desktop\\github-repository\\icontinu-app-front\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Nathan\\Desktop\\github-repository\\icontinu-app-front\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1564062719000},{"path":"C:\\Users\\Nathan\\Desktop\\github-repository\\icontinu-app-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Nathan\\Desktop\\github-repository\\icontinu-app-front\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: \"VueWebCam\",\n  props: {\n    width: {\n      type: [Number, String],\n      default: \"100%\"\n    },\n    height: {\n      type: [Number, String],\n      default: 'auto'\n    },\n    autoplay: {\n      type: Boolean,\n      default: true\n    },\n    screenshotFormat: {\n      type: String,\n      default: \"image/jpeg\"\n    },\n    selectFirstDevice: {\n      type: Boolean,\n      default: false\n    },\n    deviceId: {\n      type: String,\n      default: null\n    },\n    playsinline: {\n      type: Boolean,\n      default: true\n    },\n    resolution: {\n      type: Object,\n      default: null,\n      validator: function validator(value) {\n        return value.height && value.width;\n      }\n    }\n  },\n  data: function data() {\n    return {\n      source: null,\n      canvas: null,\n      camerasListEmitted: false,\n      cameras: []\n    };\n  },\n  watch: {\n    deviceId: function deviceId(id) {\n      this.changeCamera(id);\n    }\n  },\n  mounted: function mounted() {\n    this.setupMedia();\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.stop();\n  },\n  methods: {\n    /**\r\n     * get user media\r\n     */\n    legacyGetUserMediaSupport: function legacyGetUserMediaSupport() {\n      return function (constraints) {\n        // First get ahold of the legacy getUserMedia, if present\n        var getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia || navigator.oGetUserMedia; // Some browsers just don't implement it - return a rejected promise with an error\n        // to keep a consistent interface\n\n        if (!getUserMedia) {\n          return Promise.reject(new Error(\"getUserMedia is not implemented in this browser\"));\n        } // Otherwise, wrap the call to the old navigator.getUserMedia with a Promise\n\n\n        return new Promise(function (resolve, reject) {\n          getUserMedia.call(navigator, constraints, resolve, reject);\n        });\n      };\n    },\n\n    /**\r\n     * setup media\r\n     */\n    setupMedia: function setupMedia() {\n      if (navigator.mediaDevices === undefined) {\n        navigator.mediaDevices = {};\n      }\n\n      if (navigator.mediaDevices.getUserMedia === undefined) {\n        navigator.mediaDevices.getUserMedia = this.legacyGetUserMediaSupport();\n      }\n\n      this.testMediaAccess();\n    },\n\n    /**\r\n     * load available cameras\r\n     */\n    loadCameras: function loadCameras() {\n      var _this = this;\n\n      navigator.mediaDevices.enumerateDevices().then(function (deviceInfos) {\n        for (var i = 0; i !== deviceInfos.length; ++i) {\n          var deviceInfo = deviceInfos[i];\n\n          if (deviceInfo.kind === \"videoinput\") {\n            _this.cameras.push(deviceInfo);\n          }\n        }\n      }).then(function () {\n        if (!_this.camerasListEmitted) {\n          if (_this.selectFirstDevice && _this.cameras.length > 0) {\n            _this.deviceId = _this.cameras[0].deviceId;\n          }\n\n          _this.$emit(\"cameras\", _this.cameras);\n\n          _this.camerasListEmitted = true;\n        }\n      }).catch(function (error) {\n        return _this.$emit(\"notsupported\", error);\n      });\n    },\n\n    /**\r\n     * change to a different camera stream, like front and back camera on phones\r\n     */\n    changeCamera: function changeCamera(deviceId) {\n      this.stop();\n      this.$emit(\"camera-change\", deviceId);\n      this.loadCamera(deviceId);\n    },\n\n    /**\r\n     * load the stream to the\r\n     */\n    loadSrcStream: function loadSrcStream(stream) {\n      var _this2 = this;\n\n      if (\"srcObject\" in this.$refs.video) {\n        // new browsers api\n        this.$refs.video.srcObject = stream;\n      } else {\n        // old broswers\n        this.source = window.HTMLMediaElement.srcObject(stream);\n      } // Emit video start/live event\n\n\n      this.$refs.video.onloadedmetadata = function () {\n        _this2.$emit(\"video-live\", stream);\n      };\n\n      this.$emit(\"started\", stream);\n    },\n\n    /**\r\n     * stop the selected streamed video to change camera\r\n     */\n    stopStreamedVideo: function stopStreamedVideo(videoElem) {\n      var _this3 = this;\n\n      var stream = videoElem.srcObject;\n      var tracks = stream.getTracks();\n      tracks.forEach(function (track) {\n        // stops the video track\n        track.stop();\n\n        _this3.$emit(\"stopped\", stream);\n\n        _this3.$refs.video.srcObject = null;\n        _this3.source = null;\n      });\n    },\n    // stop the video\n    stop: function stop() {\n      if (this.$refs.video !== null && this.$refs.video.srcObject) {\n        this.stopStreamedVideo(this.$refs.video);\n      }\n    },\n    // start the video\n    start: function start() {\n      if (this.deviceId) {\n        this.loadCamera(this.deviceId);\n      }\n    },\n    // pause the video\n    pause: function pause() {\n      if (this.$refs.video !== null && this.$refs.video.srcObject) {\n        this.$refs.video.pause();\n      }\n    },\n    // resume the video\n    resume: function resume() {\n      if (this.$refs.video !== null && this.$refs.video.srcObject) {\n        this.$refs.video.play();\n      }\n    },\n\n    /**\r\n     * test access\r\n     */\n    testMediaAccess: function testMediaAccess() {\n      var _this4 = this;\n\n      var constraints = {\n        video: true\n      };\n\n      if (this.resolution) {\n        constraints.video = {};\n        constraints.video.height = this.resolution.height;\n        constraints.video.width = this.resolution.width;\n      }\n\n      navigator.mediaDevices.getUserMedia(constraints).then(function (stream) {\n        //Make sure to stop this MediaStream\n        var tracks = stream.getTracks();\n        tracks.forEach(function (track) {\n          track.stop();\n        });\n\n        _this4.loadCameras();\n      }).catch(function (error) {\n        return _this4.$emit(\"error\", error);\n      });\n    },\n\n    /**\r\n     * load the camera passed as index!\r\n     */\n    loadCamera: function loadCamera(device) {\n      var _this5 = this;\n\n      var constraints = {\n        video: {\n          deviceId: {\n            exact: device\n          }\n        }\n      };\n\n      if (this.resolution) {\n        constraints.video.height = this.resolution.height;\n        constraints.video.width = this.resolution.width;\n      }\n\n      navigator.mediaDevices.getUserMedia(constraints).then(function (stream) {\n        return _this5.loadSrcStream(stream);\n      }).catch(function (error) {\n        return _this5.$emit(\"error\", error);\n      });\n    },\n\n    /**\r\n     * capture screenshot\r\n     */\n    capture: function capture() {\n      return this.getCanvas().toDataURL(this.screenshotFormat);\n    },\n\n    /**\r\n     * get canvas\r\n     */\n    getCanvas: function getCanvas() {\n      var video = this.$refs.video;\n\n      if (!this.ctx) {\n        var _canvas = document.createElement(\"canvas\");\n\n        _canvas.height = video.videoHeight;\n        _canvas.width = video.videoWidth;\n        this.canvas = _canvas;\n        this.ctx = _canvas.getContext(\"2d\");\n      }\n\n      var ctx = this.ctx,\n          canvas = this.canvas;\n      ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\n      return canvas;\n    }\n  }\n};",{"version":3,"sources":["WebCam.vue"],"names":[],"mappings":";;;;;;;;;;;AAYA,eAAA;AACA,EAAA,IAAA,EAAA,WADA;AAGA,EAAA,KAAA,EAAA;AACA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,CAAA,MAAA,EAAA,MAAA,CADA;AAEA,MAAA,OAAA,EAAA;AAFA,KADA;AAKA,IAAA,MAAA,EAAA;AACA,MAAA,IAAA,EAAA,CAAA,MAAA,EAAA,MAAA,CADA;AAEA,MAAA,OAAA,EAAA;AAFA,KALA;AAQA,IAAA,QAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA,KARA;AAYA,IAAA,gBAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAZA;AAgBA,IAAA,iBAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAhBA;AAoBA,IAAA,QAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KApBA;AAwBA,IAAA,WAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAxBA;AA4BA,IAAA,UAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA,IAFA;AAGA,MAAA,SAAA,EAAA,mBAAA,KAAA,EAAA;AACA,eAAA,KAAA,CAAA,MAAA,IAAA,KAAA,CAAA,KAAA;AACA;AALA;AA5BA,GAHA;AAwCA,EAAA,IAxCA,kBAwCA;AACA,WAAA;AACA,MAAA,MAAA,EAAA,IADA;AAEA,MAAA,MAAA,EAAA,IAFA;AAGA,MAAA,kBAAA,EAAA,KAHA;AAIA,MAAA,OAAA,EAAA;AAJA,KAAA;AAMA,GA/CA;AAiDA,EAAA,KAAA,EAAA;AACA,IAAA,QAAA,EAAA,kBAAA,EAAA,EAAA;AACA,WAAA,YAAA,CAAA,EAAA;AACA;AAHA,GAjDA;AAuDA,EAAA,OAvDA,qBAuDA;AACA,SAAA,UAAA;AACA,GAzDA;AA2DA,EAAA,aA3DA,2BA2DA;AACA,SAAA,IAAA;AACA,GA7DA;AA+DA,EAAA,OAAA,EAAA;AACA;;;AAGA,IAAA,yBAJA,uCAIA;AACA,aAAA,UAAA,WAAA,EAAA;AACA;AACA,YAAA,YAAA,GACA,SAAA,CAAA,YAAA,IACA,SAAA,CAAA,kBADA,IAEA,SAAA,CAAA,eAFA,IAGA,SAAA,CAAA,cAHA,IAIA,SAAA,CAAA,aALA,CAFA,CASA;AACA;;AACA,YAAA,CAAA,YAAA,EAAA;AACA,iBAAA,OAAA,CAAA,MAAA,CACA,IAAA,KAAA,CAAA,iDAAA,CADA,CAAA;AAGA,SAfA,CAgBA;;;AACA,eAAA,IAAA,OAAA,CAAA,UAAA,OAAA,EAAA,MAAA,EAAA;AACA,UAAA,YAAA,CAAA,IAAA,CAAA,SAAA,EAAA,WAAA,EAAA,OAAA,EAAA,MAAA;AACA,SAFA,CAAA;AAGA,OApBA;AAqBA,KA1BA;;AA4BA;;;AAGA,IAAA,UA/BA,wBA+BA;AACA,UAAA,SAAA,CAAA,YAAA,KAAA,SAAA,EAAA;AACA,QAAA,SAAA,CAAA,YAAA,GAAA,EAAA;AACA;;AAEA,UAAA,SAAA,CAAA,YAAA,CAAA,YAAA,KAAA,SAAA,EAAA;AACA,QAAA,SAAA,CAAA,YAAA,CAAA,YAAA,GAAA,KAAA,yBAAA,EAAA;AACA;;AAEA,WAAA,eAAA;AACA,KAzCA;;AA2CA;;;AAGA,IAAA,WA9CA,yBA8CA;AAAA;;AACA,MAAA,SAAA,CAAA,YAAA,CACA,gBADA,GAEA,IAFA,CAEA,UAAA,WAAA,EAAA;AACA,aAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,KAAA,WAAA,CAAA,MAAA,EAAA,EAAA,CAAA,EAAA;AACA,cAAA,UAAA,GAAA,WAAA,CAAA,CAAA,CAAA;;AACA,cAAA,UAAA,CAAA,IAAA,KAAA,YAAA,EAAA;AACA,YAAA,KAAA,CAAA,OAAA,CAAA,IAAA,CAAA,UAAA;AACA;AACA;AACA,OATA,EAUA,IAVA,CAUA,YAAA;AACA,YAAA,CAAA,KAAA,CAAA,kBAAA,EAAA;AACA,cAAA,KAAA,CAAA,iBAAA,IAAA,KAAA,CAAA,OAAA,CAAA,MAAA,GAAA,CAAA,EAAA;AACA,YAAA,KAAA,CAAA,QAAA,GAAA,KAAA,CAAA,OAAA,CAAA,CAAA,EAAA,QAAA;AACA;;AAEA,UAAA,KAAA,CAAA,KAAA,CAAA,SAAA,EAAA,KAAA,CAAA,OAAA;;AACA,UAAA,KAAA,CAAA,kBAAA,GAAA,IAAA;AACA;AACA,OAnBA,EAoBA,KApBA,CAoBA,UAAA,KAAA;AAAA,eAAA,KAAA,CAAA,KAAA,CAAA,cAAA,EAAA,KAAA,CAAA;AAAA,OApBA;AAqBA,KApEA;;AAsEA;;;AAGA,IAAA,YAzEA,wBAyEA,QAzEA,EAyEA;AACA,WAAA,IAAA;AACA,WAAA,KAAA,CAAA,eAAA,EAAA,QAAA;AACA,WAAA,UAAA,CAAA,QAAA;AACA,KA7EA;;AA+EA;;;AAGA,IAAA,aAlFA,yBAkFA,MAlFA,EAkFA;AAAA;;AACA,UAAA,eAAA,KAAA,KAAA,CAAA,KAAA,EAAA;AACA;AACA,aAAA,KAAA,CAAA,KAAA,CAAA,SAAA,GAAA,MAAA;AACA,OAHA,MAGA;AACA;AACA,aAAA,MAAA,GAAA,MAAA,CAAA,gBAAA,CAAA,SAAA,CAAA,MAAA,CAAA;AACA,OAPA,CAQA;;;AACA,WAAA,KAAA,CAAA,KAAA,CAAA,gBAAA,GAAA,YAAA;AACA,QAAA,MAAA,CAAA,KAAA,CAAA,YAAA,EAAA,MAAA;AACA,OAFA;;AAIA,WAAA,KAAA,CAAA,SAAA,EAAA,MAAA;AACA,KAhGA;;AAkGA;;;AAGA,IAAA,iBArGA,6BAqGA,SArGA,EAqGA;AAAA;;AACA,UAAA,MAAA,GAAA,SAAA,CAAA,SAAA;AACA,UAAA,MAAA,GAAA,MAAA,CAAA,SAAA,EAAA;AAEA,MAAA,MAAA,CAAA,OAAA,CAAA,UAAA,KAAA,EAAA;AACA;AACA,QAAA,KAAA,CAAA,IAAA;;AACA,QAAA,MAAA,CAAA,KAAA,CAAA,SAAA,EAAA,MAAA;;AAEA,QAAA,MAAA,CAAA,KAAA,CAAA,KAAA,CAAA,SAAA,GAAA,IAAA;AACA,QAAA,MAAA,CAAA,MAAA,GAAA,IAAA;AACA,OAPA;AAQA,KAjHA;AAmHA;AACA,IAAA,IApHA,kBAoHA;AACA,UAAA,KAAA,KAAA,CAAA,KAAA,KAAA,IAAA,IAAA,KAAA,KAAA,CAAA,KAAA,CAAA,SAAA,EAAA;AACA,aAAA,iBAAA,CAAA,KAAA,KAAA,CAAA,KAAA;AACA;AACA,KAxHA;AA0HA;AACA,IAAA,KA3HA,mBA2HA;AACA,UAAA,KAAA,QAAA,EAAA;AACA,aAAA,UAAA,CAAA,KAAA,QAAA;AACA;AACA,KA/HA;AAiIA;AACA,IAAA,KAlIA,mBAkIA;AACA,UAAA,KAAA,KAAA,CAAA,KAAA,KAAA,IAAA,IAAA,KAAA,KAAA,CAAA,KAAA,CAAA,SAAA,EAAA;AACA,aAAA,KAAA,CAAA,KAAA,CAAA,KAAA;AACA;AACA,KAtIA;AAwIA;AACA,IAAA,MAzIA,oBAyIA;AACA,UAAA,KAAA,KAAA,CAAA,KAAA,KAAA,IAAA,IAAA,KAAA,KAAA,CAAA,KAAA,CAAA,SAAA,EAAA;AACA,aAAA,KAAA,CAAA,KAAA,CAAA,IAAA;AACA;AACA,KA7IA;;AA+IA;;;AAGA,IAAA,eAlJA,6BAkJA;AAAA;;AACA,UAAA,WAAA,GAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OAAA;;AAEA,UAAA,KAAA,UAAA,EAAA;AACA,QAAA,WAAA,CAAA,KAAA,GAAA,EAAA;AACA,QAAA,WAAA,CAAA,KAAA,CAAA,MAAA,GAAA,KAAA,UAAA,CAAA,MAAA;AACA,QAAA,WAAA,CAAA,KAAA,CAAA,KAAA,GAAA,KAAA,UAAA,CAAA,KAAA;AACA;;AAEA,MAAA,SAAA,CAAA,YAAA,CACA,YADA,CACA,WADA,EAEA,IAFA,CAEA,UAAA,MAAA,EAAA;AACA;AACA,YAAA,MAAA,GAAA,MAAA,CAAA,SAAA,EAAA;AACA,QAAA,MAAA,CAAA,OAAA,CAAA,UAAA,KAAA,EAAA;AACA,UAAA,KAAA,CAAA,IAAA;AACA,SAFA;;AAGA,QAAA,MAAA,CAAA,WAAA;AACA,OATA,EAUA,KAVA,CAUA,UAAA,KAAA;AAAA,eAAA,MAAA,CAAA,KAAA,CAAA,OAAA,EAAA,KAAA,CAAA;AAAA,OAVA;AAWA,KAtKA;;AAwKA;;;AAGA,IAAA,UA3KA,sBA2KA,MA3KA,EA2KA;AAAA;;AACA,UAAA,WAAA,GAAA;AAAA,QAAA,KAAA,EAAA;AAAA,UAAA,QAAA,EAAA;AAAA,YAAA,KAAA,EAAA;AAAA;AAAA;AAAA,OAAA;;AAEA,UAAA,KAAA,UAAA,EAAA;AACA,QAAA,WAAA,CAAA,KAAA,CAAA,MAAA,GAAA,KAAA,UAAA,CAAA,MAAA;AACA,QAAA,WAAA,CAAA,KAAA,CAAA,KAAA,GAAA,KAAA,UAAA,CAAA,KAAA;AACA;;AAEA,MAAA,SAAA,CAAA,YAAA,CACA,YADA,CACA,WADA,EAEA,IAFA,CAEA,UAAA,MAAA;AAAA,eAAA,MAAA,CAAA,aAAA,CAAA,MAAA,CAAA;AAAA,OAFA,EAGA,KAHA,CAGA,UAAA,KAAA;AAAA,eAAA,MAAA,CAAA,KAAA,CAAA,OAAA,EAAA,KAAA,CAAA;AAAA,OAHA;AAIA,KAvLA;;AAyLA;;;AAGA,IAAA,OA5LA,qBA4LA;AACA,aAAA,KAAA,SAAA,GAAA,SAAA,CAAA,KAAA,gBAAA,CAAA;AACA,KA9LA;;AAgMA;;;AAGA,IAAA,SAnMA,uBAmMA;AACA,UAAA,KAAA,GAAA,KAAA,KAAA,CAAA,KAAA;;AACA,UAAA,CAAA,KAAA,GAAA,EAAA;AACA,YAAA,OAAA,GAAA,QAAA,CAAA,aAAA,CAAA,QAAA,CAAA;;AACA,QAAA,OAAA,CAAA,MAAA,GAAA,KAAA,CAAA,WAAA;AACA,QAAA,OAAA,CAAA,KAAA,GAAA,KAAA,CAAA,UAAA;AACA,aAAA,MAAA,GAAA,OAAA;AACA,aAAA,GAAA,GAAA,OAAA,CAAA,UAAA,CAAA,IAAA,CAAA;AACA;;AARA,UASA,GATA,GASA,IATA,CASA,GATA;AAAA,UASA,MATA,GASA,IATA,CASA,MATA;AAUA,MAAA,GAAA,CAAA,SAAA,CAAA,KAAA,EAAA,CAAA,EAAA,CAAA,EAAA,MAAA,CAAA,KAAA,EAAA,MAAA,CAAA,MAAA;AAEA,aAAA,MAAA;AACA;AAhNA;AA/DA,CAAA","sourcesContent":["<template>\r\n  <video\r\n    ref=\"video\"\r\n    :width=\"width\"\r\n    :height=\"height\"\r\n    :src=\"source\"\r\n    :autoplay=\"autoplay\"\r\n    :playsinline=\"playsinline\"\r\n  />\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"VueWebCam\",\r\n\r\n  props: {\r\n    width: {\r\n      type: [Number, String],\r\n      default: \"100%\"\r\n    },\r\n    height: {\r\n      type: [Number, String],\r\n      default: 'auto'    },\r\n    autoplay: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    screenshotFormat: {\r\n      type: String,\r\n      default: \"image/jpeg\"\r\n    },\r\n    selectFirstDevice: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    deviceId: {\r\n      type: String,\r\n      default: null\r\n    },\r\n    playsinline: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    resolution: {\r\n      type: Object,\r\n      default: null,\r\n      validator: value => {\r\n        return value.height && value.width;\r\n      }\r\n    }\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      source: null,\r\n      canvas: null,\r\n      camerasListEmitted: false,\r\n      cameras: []\r\n    };\r\n  },\r\n\r\n  watch: {\r\n    deviceId: function(id) {\r\n      this.changeCamera(id);\r\n    }\r\n  },\r\n\r\n  mounted() {\r\n    this.setupMedia();\r\n  },\r\n\r\n  beforeDestroy() {\r\n    this.stop();\r\n  },\r\n\r\n  methods: {\r\n    /**\r\n     * get user media\r\n     */\r\n    legacyGetUserMediaSupport() {\r\n      return constraints => {\r\n        // First get ahold of the legacy getUserMedia, if present\r\n        let getUserMedia =\r\n          navigator.getUserMedia ||\r\n          navigator.webkitGetUserMedia ||\r\n          navigator.mozGetUserMedia ||\r\n          navigator.msGetUserMedia ||\r\n          navigator.oGetUserMedia;\r\n\r\n        // Some browsers just don't implement it - return a rejected promise with an error\r\n        // to keep a consistent interface\r\n        if (!getUserMedia) {\r\n          return Promise.reject(\r\n            new Error(\"getUserMedia is not implemented in this browser\")\r\n          );\r\n        }\r\n        // Otherwise, wrap the call to the old navigator.getUserMedia with a Promise\r\n        return new Promise(function(resolve, reject) {\r\n          getUserMedia.call(navigator, constraints, resolve, reject);\r\n        });\r\n      };\r\n    },\r\n\r\n    /**\r\n     * setup media\r\n     */\r\n    setupMedia() {\r\n      if (navigator.mediaDevices === undefined) {\r\n        navigator.mediaDevices = {};\r\n      }\r\n\r\n      if (navigator.mediaDevices.getUserMedia === undefined) {\r\n        navigator.mediaDevices.getUserMedia = this.legacyGetUserMediaSupport();\r\n      }\r\n\r\n      this.testMediaAccess();\r\n    },\r\n\r\n    /**\r\n     * load available cameras\r\n     */\r\n    loadCameras() {\r\n      navigator.mediaDevices\r\n        .enumerateDevices()\r\n        .then(deviceInfos => {\r\n          for (let i = 0; i !== deviceInfos.length; ++i) {\r\n            let deviceInfo = deviceInfos[i];\r\n            if (deviceInfo.kind === \"videoinput\") {\r\n              this.cameras.push(deviceInfo);\r\n            }\r\n          }\r\n        })\r\n        .then(() => {\r\n          if (!this.camerasListEmitted) {\r\n            if (this.selectFirstDevice && this.cameras.length > 0) {\r\n              this.deviceId = this.cameras[0].deviceId;\r\n            }\r\n\r\n            this.$emit(\"cameras\", this.cameras);\r\n            this.camerasListEmitted = true;\r\n          }\r\n        })\r\n        .catch(error => this.$emit(\"notsupported\", error));\r\n    },\r\n\r\n    /**\r\n     * change to a different camera stream, like front and back camera on phones\r\n     */\r\n    changeCamera(deviceId) {\r\n      this.stop();\r\n      this.$emit(\"camera-change\", deviceId);\r\n      this.loadCamera(deviceId);\r\n    },\r\n\r\n    /**\r\n     * load the stream to the\r\n     */\r\n    loadSrcStream(stream) {\r\n      if (\"srcObject\" in this.$refs.video) {\r\n        // new browsers api\r\n        this.$refs.video.srcObject = stream;\r\n      } else {\r\n        // old broswers\r\n        this.source = window.HTMLMediaElement.srcObject(stream);\r\n      }\r\n      // Emit video start/live event\r\n      this.$refs.video.onloadedmetadata = () => {\r\n        this.$emit(\"video-live\", stream);\r\n      };\r\n\r\n      this.$emit(\"started\", stream);\r\n    },\r\n\r\n    /**\r\n     * stop the selected streamed video to change camera\r\n     */\r\n    stopStreamedVideo(videoElem) {\r\n      let stream = videoElem.srcObject;\r\n      let tracks = stream.getTracks();\r\n\r\n      tracks.forEach(track => {\r\n        // stops the video track\r\n        track.stop();\r\n        this.$emit(\"stopped\", stream);\r\n\r\n        this.$refs.video.srcObject = null;\r\n        this.source = null;\r\n      });\r\n    },\r\n\r\n    // stop the video\r\n    stop() {\r\n      if (this.$refs.video !== null && this.$refs.video.srcObject) {\r\n        this.stopStreamedVideo(this.$refs.video);\r\n      }\r\n    },\r\n\r\n    // start the video\r\n    start() {\r\n      if (this.deviceId) {\r\n        this.loadCamera(this.deviceId);\r\n      }\r\n    },\r\n\r\n    // pause the video\r\n    pause() {\r\n      if (this.$refs.video !== null && this.$refs.video.srcObject) {\r\n        this.$refs.video.pause();\r\n      }\r\n    },\r\n\r\n    // resume the video\r\n    resume() {\r\n      if (this.$refs.video !== null && this.$refs.video.srcObject) {\r\n        this.$refs.video.play();\r\n      }\r\n    },\r\n\r\n    /**\r\n     * test access\r\n     */\r\n    testMediaAccess() {\r\n      let constraints = { video: true };\r\n\r\n      if (this.resolution) {\r\n        constraints.video = {};\r\n        constraints.video.height = this.resolution.height;\r\n        constraints.video.width = this.resolution.width;\r\n      }\r\n\r\n      navigator.mediaDevices\r\n        .getUserMedia(constraints)\r\n        .then(stream => {\r\n          //Make sure to stop this MediaStream\r\n          let tracks = stream.getTracks();\r\n          tracks.forEach(track => {\r\n            track.stop();\r\n          });\r\n          this.loadCameras();\r\n        })\r\n        .catch(error => this.$emit(\"error\", error));\r\n    },\r\n\r\n    /**\r\n     * load the camera passed as index!\r\n     */\r\n    loadCamera(device) {\r\n      let constraints = { video: { deviceId: { exact: device } } };\r\n\r\n      if (this.resolution) {\r\n        constraints.video.height = this.resolution.height;\r\n        constraints.video.width = this.resolution.width;\r\n      }\r\n\r\n      navigator.mediaDevices\r\n        .getUserMedia(constraints)\r\n        .then(stream => this.loadSrcStream(stream))\r\n        .catch(error => this.$emit(\"error\", error));\r\n    },\r\n\r\n    /**\r\n     * capture screenshot\r\n     */\r\n    capture() {\r\n      return this.getCanvas().toDataURL(this.screenshotFormat);\r\n    },\r\n\r\n    /**\r\n     * get canvas\r\n     */\r\n    getCanvas() {\r\n      let video = this.$refs.video;\r\n      if (!this.ctx) {\r\n        let canvas = document.createElement(\"canvas\");\r\n        canvas.height = video.videoHeight;\r\n        canvas.width = video.videoWidth;\r\n        this.canvas = canvas;\r\n        this.ctx = canvas.getContext(\"2d\");\r\n      }\r\n      const { ctx, canvas } = this;\r\n      ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n\r\n      return canvas;\r\n    }\r\n  }\r\n};\r\n</script>"],"sourceRoot":"src/components"}]}