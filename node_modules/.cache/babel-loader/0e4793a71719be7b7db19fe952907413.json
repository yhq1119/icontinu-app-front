{"remainingRequest":"C:\\Users\\Nathan\\Desktop\\github-repository\\icontinu-app-front\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Nathan\\Desktop\\github-repository\\icontinu-app-front\\node_modules\\vuetify-loader\\lib\\loader.js!C:\\Users\\Nathan\\Desktop\\github-repository\\icontinu-app-front\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Nathan\\Desktop\\github-repository\\icontinu-app-front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Nathan\\Desktop\\github-repository\\icontinu-app-front\\src\\views\\CourseDetail.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Nathan\\Desktop\\github-repository\\icontinu-app-front\\src\\views\\CourseDetail.vue","mtime":1571889682975},{"path":"C:\\Users\\Nathan\\Desktop\\github-repository\\icontinu-app-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Nathan\\Desktop\\github-repository\\icontinu-app-front\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Nathan\\Desktop\\github-repository\\icontinu-app-front\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1564062719000},{"path":"C:\\Users\\Nathan\\Desktop\\github-repository\\icontinu-app-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Nathan\\Desktop\\github-repository\\icontinu-app-front\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"C:\\\\Users\\\\Nathan\\\\Desktop\\\\github-repository\\\\icontinu-app-front\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState } from \"vuex\";\nexport default {\n  data: function data() {\n    return {\n      enrolstatus: null,\n      course_id: \"\",\n      point: \"\",\n      dialog: {\n        show: false,\n        title: \"Course points\",\n        text: \"\"\n      },\n      enroltext: \"Enrol Now\"\n    };\n  },\n  methods: {\n    enrollll: function () {\n      var _enrollll = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var send, res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.dialog.show = false;\n                _context.prev = 1;\n                send = new FormData();\n                send.append(\"username\", window.localStorage.getItem(\"username\"));\n                send.append(\"course_id\", this.$route.params.id);\n                _context.next = 7;\n                return this.$store.dispatch(\"callAPI\", {\n                  send: send,\n                  branch: \"/enroll/\",\n                  call: \"DO_NOTHING\",\n                  setData: {}\n                });\n\n              case 7:\n                res = _context.sent;\n\n                // console.log(res.code)\n                if (res.status == \"1\") {\n                  this.$store.commit(\"SET_SNACKBAR\", {\n                    showing: true,\n                    text: \"Enrolled successfully!\",\n                    color: \"success\"\n                  });\n                  this.$router.push(\"/user/suggest\");\n                } else {\n                  this.$store.commit(\"SET_SNACKBAR\", {\n                    showing: true,\n                    text: \"You have already enrolled this course\",\n                    color: \"error\"\n                  });\n                  this.$router.push(\"/suggest\");\n                }\n\n                _context.next = 14;\n                break;\n\n              case 11:\n                _context.prev = 11;\n                _context.t0 = _context[\"catch\"](1);\n                this.$store.commit(\"SET_SNACKBAR\", {\n                  showing: true,\n                  text: \"Error\",\n                  color: \"error\"\n                });\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[1, 11]]);\n      }));\n\n      function enrollll() {\n        return _enrollll.apply(this, arguments);\n      }\n\n      return enrollll;\n    }(),\n    checkEnroll: function () {\n      var _checkEnroll = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var send, res;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                send = new FormData();\n                send.append(\"username\", window.localStorage.getItem(\"username\"));\n                send.append(\"course_id\", this.$route.params.id);\n                _context2.next = 6;\n                return this.$store.dispatch(\"callAPI\", {\n                  send: send,\n                  branch: \"/course_enrollment_check/\",\n                  call: \"DO_NOTHING\",\n                  setData: {}\n                });\n\n              case 6:\n                res = _context2.sent;\n\n                if (this.isLogin) {\n                  if (res.code == \"1\") {\n                    this.enroltext = \"Have enrolled\";\n                    this.enrolstatus = true;\n                  } else {\n                    this.enroltext = \"Enrol Now\";\n                    this.enrolstatus = false;\n                  }\n                } else {\n                  this.enrolstatus = true;\n                }\n\n                _context2.next = 12;\n                break;\n\n              case 10:\n                _context2.prev = 10;\n                _context2.t0 = _context2[\"catch\"](0);\n\n              case 12:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[0, 10]]);\n      }));\n\n      function checkEnroll() {\n        return _checkEnroll.apply(this, arguments);\n      }\n\n      return checkEnroll;\n    }(),\n    setup: function setup() {\n      this.course_id = this.$route.params.id;\n      this.point = this.course.course_point; // console.log(`P value is ${this.point}`);\n\n      this.checkEnroll();\n    }\n  },\n  computed: _objectSpread({\n    course: function course() {\n      return this.$store.getters.findCourseById(this.course_id);\n    }\n  }, mapState([\"isLogin\"])),\n  mounted: function mounted() {\n    this.setup();\n  }\n};",{"version":3,"sources":["CourseDetail.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6FA,SAAA,QAAA,QAAA,MAAA;AACA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,WAAA,EAAA,IADA;AAEA,MAAA,SAAA,EAAA,EAFA;AAGA,MAAA,KAAA,EAAA,EAHA;AAIA,MAAA,MAAA,EAAA;AACA,QAAA,IAAA,EAAA,KADA;AAEA,QAAA,KAAA,EAAA,eAFA;AAGA,QAAA,IAAA,EAAA;AAHA,OAJA;AASA,MAAA,SAAA,EAAA;AATA,KAAA;AAWA,GAbA;AAcA,EAAA,OAAA,EAAA;AACA,IAAA,QADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,qBAAA,MAAA,CAAA,IAAA,GAAA,KAAA;AAFA;AAIA,gBAAA,IAJA,GAIA,IAAA,QAAA,EAJA;AAKA,gBAAA,IAAA,CAAA,MAAA,CAAA,UAAA,EAAA,MAAA,CAAA,YAAA,CAAA,OAAA,CAAA,UAAA,CAAA;AACA,gBAAA,IAAA,CAAA,MAAA,CAAA,WAAA,EAAA,KAAA,MAAA,CAAA,MAAA,CAAA,EAAA;AANA;AAAA,uBAQA,KAAA,MAAA,CAAA,QAAA,CAAA,SAAA,EAAA;AACA,kBAAA,IAAA,EAAA,IADA;AAEA,kBAAA,MAAA,EAAA,UAFA;AAGA,kBAAA,IAAA,EAAA,YAHA;AAIA,kBAAA,OAAA,EAAA;AAJA,iBAAA,CARA;;AAAA;AAQA,gBAAA,GARA;;AAcA;AACA,oBAAA,GAAA,CAAA,MAAA,IAAA,GAAA,EAAA;AACA,uBAAA,MAAA,CAAA,MAAA,CAAA,cAAA,EAAA;AACA,oBAAA,OAAA,EAAA,IADA;AAEA,oBAAA,IAAA,EAAA,wBAFA;AAGA,oBAAA,KAAA,EAAA;AAHA,mBAAA;AAKA,uBAAA,OAAA,CAAA,IAAA,CAAA,eAAA;AACA,iBAPA,MAOA;AACA,uBAAA,MAAA,CAAA,MAAA,CAAA,cAAA,EAAA;AACA,oBAAA,OAAA,EAAA,IADA;AAEA,oBAAA,IAAA,EAAA,uCAFA;AAGA,oBAAA,KAAA,EAAA;AAHA,mBAAA;AAKA,uBAAA,OAAA,CAAA,IAAA,CAAA,UAAA;AACA;;AA7BA;AAAA;;AAAA;AAAA;AAAA;AA+BA,qBAAA,MAAA,CAAA,MAAA,CAAA,cAAA,EAAA;AACA,kBAAA,OAAA,EAAA,IADA;AAEA,kBAAA,IAAA,EAAA,OAFA;AAGA,kBAAA,KAAA,EAAA;AAHA,iBAAA;;AA/BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAuCA,IAAA,WAvCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAyCA,gBAAA,IAzCA,GAyCA,IAAA,QAAA,EAzCA;AA0CA,gBAAA,IAAA,CAAA,MAAA,CAAA,UAAA,EAAA,MAAA,CAAA,YAAA,CAAA,OAAA,CAAA,UAAA,CAAA;AACA,gBAAA,IAAA,CAAA,MAAA,CAAA,WAAA,EAAA,KAAA,MAAA,CAAA,MAAA,CAAA,EAAA;AA3CA;AAAA,uBA4CA,KAAA,MAAA,CAAA,QAAA,CAAA,SAAA,EAAA;AACA,kBAAA,IAAA,EAAA,IADA;AAEA,kBAAA,MAAA,EAAA,2BAFA;AAGA,kBAAA,IAAA,EAAA,YAHA;AAIA,kBAAA,OAAA,EAAA;AAJA,iBAAA,CA5CA;;AAAA;AA4CA,gBAAA,GA5CA;;AAkDA,oBAAA,KAAA,OAAA,EAAA;AACA,sBAAA,GAAA,CAAA,IAAA,IAAA,GAAA,EAAA;AACA,yBAAA,SAAA,GAAA,eAAA;AACA,yBAAA,WAAA,GAAA,IAAA;AACA,mBAHA,MAGA;AACA,yBAAA,SAAA,GAAA,WAAA;AACA,yBAAA,WAAA,GAAA,KAAA;AACA;AACA,iBARA,MAQA;AACA,uBAAA,WAAA,GAAA,IAAA;AACA;;AA5DA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAiEA,IAAA,KAjEA,mBAiEA;AACA,WAAA,SAAA,GAAA,KAAA,MAAA,CAAA,MAAA,CAAA,EAAA;AACA,WAAA,KAAA,GAAA,KAAA,MAAA,CAAA,YAAA,CAFA,CAGA;;AACA,WAAA,WAAA;AACA;AAtEA,GAdA;AAsFA,EAAA,QAAA;AACA,IAAA,MADA,oBACA;AACA,aAAA,KAAA,MAAA,CAAA,OAAA,CAAA,cAAA,CAAA,KAAA,SAAA,CAAA;AACA;AAHA,KAIA,QAAA,CAAA,CAAA,SAAA,CAAA,CAJA,CAtFA;AA4FA,EAAA,OA5FA,qBA4FA;AACA,SAAA,KAAA;AACA;AA9FA,CAAA","sourcesContent":["<template>\r\n  <v-container id=\"course-info-container\">\r\n    <v-col>\r\n      <v-row>\r\n        <v-col>\r\n          <v-row>\r\n            <v-col cols=\"12\" md=\"1\" xl=\"2\"></v-col>\r\n            <v-col cols=\"12\" md=\"7\" xl=\"6\">\r\n              <v-row>\r\n                <v-col style=\"text-align:left\">\r\n                  <h1>Course Introduction</h1>\r\n                </v-col>\r\n              </v-row>\r\n              <v-card outlined id=\"info-card\">\r\n                <!--  -->\r\n                <v-row>\r\n                  <v-col style=\"text-align:left\">\r\n                    <h2 id=\"intro2\">Introduction</h2>\r\n                  </v-col>\r\n                </v-row>\r\n                <v-row>\r\n                  <v-col cols=\"12\" md=\"6\" style=\"text-align:left\">\r\n                    <!--  -->\r\n                    <ul>\r\n                      <li>What is {{course.course_name}}</li>\r\n                      <li>What are {{course.course_name}} principles</li>\r\n                      <li>{{course.course_name}} business behaviour</li>\r\n                      <li>Breif history of {{course.course_name}}</li>\r\n                      <li>{{course.course_name}} in research</li>\r\n                      <li>Description of {{course.course_name}}: {{course.course_desc}}</li>\r\n                    </ul>\r\n                    <!--  -->\r\n                  </v-col>\r\n                  <v-col cols=\"12\" md=\"6\" style=\"text-align:left\">\r\n                    <!--  -->\r\n                    <ul>\r\n                      <li>Name: {{course.course_name}}</li>\r\n                      <li>Time: {{course.course_time}}</li>\r\n                      <li>Point(s): {{course.course_point}}</li>\r\n                      <li>Duration: {{course.course_duration}} hour(s)</li>\r\n                      <li>Location: {{course.course_location}}</li>\r\n                    </ul>\r\n                    <!--  -->\r\n                  </v-col>\r\n                </v-row>\r\n                <!--  -->\r\n              </v-card>\r\n            </v-col>\r\n            <v-col cols=\"12\" md=\"3\">\r\n              <v-row class=\"d-none d-md-block\">\r\n                <v-img style=\"padding:12px\" src=\"../assets/eroll-logo.png\"></v-img>\r\n              </v-row>\r\n              <v-row>\r\n                <!--  -->\r\n                <v-dialog v-model=\"dialog.show\" persistent max-width=\"340px\" min-height=\"500px\">\r\n                  <template justify=\"center\" v-slot:activator=\"{ on }\">\r\n                    <v-col>\r\n                      <v-row>\r\n                        <v-col>\r\n                          <v-btn color=\"orange\" v-on=\"on\" :disabled=\"enrolstatus\">{{enroltext}}</v-btn>\r\n                        </v-col>\r\n                      </v-row>\r\n                      <v-row v-show=\"!isLogin\">\r\n                        <v-col>\r\n                          <p>*Login to enrol.</p>\r\n                        </v-col>\r\n                      </v-row>\r\n                    </v-col>\r\n                  </template>\r\n                  <v-card class=\"pa-4\" color=\"rgba(255,255,255,0.90)\">\r\n                    <v-card-title style=\"wordwrap:normal\">{{dialog.title}}</v-card-title>\r\n                    <v-card-text>After passing the course, {{point}} points will be gained</v-card-text>\r\n                    <v-card-actions>\r\n                      <div class=\"flex-grow-1\"></div>\r\n                      <v-btn color=\"grey lighten-1\" @click=\"enrollll()\">Yes, I agree</v-btn>\r\n                      <v-btn color=\"grey lighten-1\" @click=\"dialog.show = false\">\r\n                        <span class=\"darken-2 orange--text\">No, thanks</span>\r\n                      </v-btn>\r\n                    </v-card-actions>\r\n                  </v-card>\r\n                </v-dialog>\r\n                <!--  -->\r\n              </v-row>\r\n            </v-col>\r\n            <v-col cols=\"12\" md=\"1\" xl=\"2\"></v-col>\r\n          </v-row>\r\n        </v-col>\r\n      </v-row>\r\n    </v-col>\r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\nimport { mapState } from \"vuex\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      enrolstatus: null,\r\n      course_id: \"\",\r\n      point: \"\",\r\n      dialog: {\r\n        show: false,\r\n        title: \"Course points\",\r\n        text: \"\"\r\n      },\r\n      enroltext: \"Enrol Now\"\r\n    };\r\n  },\r\n  methods: {\r\n    async enrollll() {\r\n      this.dialog.show = false;\r\n      try {\r\n        let send = new FormData();\r\n        send.append(\"username\", window.localStorage.getItem(\"username\"));\r\n        send.append(\"course_id\", this.$route.params.id);\r\n\r\n        let res = await this.$store.dispatch(\"callAPI\", {\r\n          send: send,\r\n          branch: \"/enroll/\",\r\n          call: \"DO_NOTHING\",\r\n          setData: {}\r\n        });\r\n        // console.log(res.code)\r\n        if (res.status == \"1\") {\r\n          this.$store.commit(\"SET_SNACKBAR\", {\r\n            showing: true,\r\n            text: \"Enrolled successfully!\",\r\n            color: \"success\"\r\n          });\r\n          this.$router.push(\"/user/suggest\");\r\n        } else {\r\n          this.$store.commit(\"SET_SNACKBAR\", {\r\n            showing: true,\r\n            text: \"You have already enrolled this course\",\r\n            color: \"error\"\r\n          });\r\n          this.$router.push(\"/suggest\");\r\n        }\r\n      } catch {\r\n        this.$store.commit(\"SET_SNACKBAR\", {\r\n          showing: true,\r\n          text: \"Error\",\r\n          color: \"error\"\r\n        });\r\n      }\r\n    },\r\n\r\n    async checkEnroll() {\r\n      try {\r\n        let send = new FormData();\r\n        send.append(\"username\", window.localStorage.getItem(\"username\"));\r\n        send.append(\"course_id\", this.$route.params.id);\r\n        let res = await this.$store.dispatch(\"callAPI\", {\r\n          send: send,\r\n          branch: \"/course_enrollment_check/\",\r\n          call: \"DO_NOTHING\",\r\n          setData: {}\r\n        });\r\n        if (this.isLogin) {\r\n          if (res.code == \"1\") {\r\n            this.enroltext = \"Have enrolled\";\r\n            this.enrolstatus = true;\r\n          } else {\r\n            this.enroltext = \"Enrol Now\";\r\n            this.enrolstatus = false;\r\n          }\r\n        } else {\r\n          this.enrolstatus = true;\r\n        }\r\n      } catch {\r\n        // console.log(\"Error in check enrollment\");\r\n      }\r\n    },\r\n    setup() {\r\n      this.course_id = this.$route.params.id;\r\n      this.point = this.course.course_point;\r\n      // console.log(`P value is ${this.point}`);\r\n      this.checkEnroll();\r\n    }\r\n  },\r\n  computed: {\r\n    course() {\r\n      return this.$store.getters.findCourseById(this.course_id);\r\n    },\r\n    ...mapState([\"isLogin\"])\r\n  },\r\n  mounted() {\r\n    this.setup();\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\nli {\r\n  word-wrap: normal;\r\n  text-align: left;\r\n}\r\n#info-card {\r\n  padding: 3em;\r\n  border-radius: 50px;\r\n  border-color: #e3d0ff;\r\n  max-width: 800px;\r\n}\r\n#intro2 {\r\n  color: #5c6ac4;\r\n}\r\n#course-info-container li {\r\n  color: #013567;\r\n}\r\n</style>"],"sourceRoot":"src/views"}]}