{"remainingRequest":"C:\\Users\\Nathan\\Desktop\\github-repository\\icontinu-app-front\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Nathan\\Desktop\\github-repository\\icontinu-app-front\\node_modules\\vuetify-loader\\lib\\loader.js!C:\\Users\\Nathan\\Desktop\\github-repository\\icontinu-app-front\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Nathan\\Desktop\\github-repository\\icontinu-app-front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Nathan\\Desktop\\github-repository\\icontinu-app-front\\src\\views\\TestView.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Nathan\\Desktop\\github-repository\\icontinu-app-front\\src\\views\\TestView.vue","mtime":1571170628360},{"path":"C:\\Users\\Nathan\\Desktop\\github-repository\\icontinu-app-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Nathan\\Desktop\\github-repository\\icontinu-app-front\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Nathan\\Desktop\\github-repository\\icontinu-app-front\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1564062719000},{"path":"C:\\Users\\Nathan\\Desktop\\github-repository\\icontinu-app-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Nathan\\Desktop\\github-repository\\icontinu-app-front\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"C:\\\\Users\\\\Nathan\\\\Desktop\\\\github-repository\\\\icontinu-app-front\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _toArray(arr) { return _arrayWithHoles(arr) || _iterableToArray(arr) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/* eslint-disable */\nimport WebCam from \"../components/WebCam\";\nimport { mapState } from \"vuex\";\nexport default {\n  name: \"verify\",\n  components: {\n    \"vue-web-cam\": WebCam\n  },\n  data: function data() {\n    return {\n      showCamera: true,\n      course_id: \"\",\n      overlay: false,\n      img: null,\n      camera: null,\n      deviceId: null,\n      devices: []\n    };\n  },\n  mounted: function mounted() {\n    this.course_id = this.$route.params.id;\n    this.hint();\n    this.getCompetence();\n  },\n  computed: _objectSpread({}, mapState([\"username\"]), {\n    device: function device() {\n      var _this = this;\n\n      return this.devices.find(function (n) {\n        return n.deviceId === _this.deviceId;\n      });\n    }\n  }),\n  watch: {\n    camera: function camera(id) {\n      this.deviceId = id;\n    },\n    devices: function devices() {\n      // Once we have a list select the first one\n      var _this$devices = _toArray(this.devices),\n          first = _this$devices[0],\n          tail = _this$devices.slice(1);\n\n      if (first) {\n        this.camera = first.deviceId;\n        this.deviceId = first.deviceId;\n      }\n\n      tail.deviceId;\n    }\n  },\n  methods: {\n    toggle_camera: function toggle_camera() {\n      if (this.showCamera) {\n        this.onStart();\n      } else {\n        this.onStop();\n      }\n    },\n    snackBar: function snackBar(text, color) {\n      this.$store.commit(\"SET_SNACKBAR\", {\n        showing: true,\n        text: text,\n        color: color\n      });\n    },\n    onCapture: function () {\n      var _onCapture = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var file, res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.overlay = true;\n                this.img = this.$refs.webcam.capture();\n                file = this.dataURLtoFile(this.img, \"taken\");\n                console.log(file);\n                _context.next = 6;\n                return this.$store.dispatch(\"callAzure\", file);\n\n              case 6:\n                res = _context.sent;\n                console.log(res);\n\n                if (res.length == 0) {\n                  this.snackBar(\"No face detected!\", \"warning\");\n                } else if (res.length == 1) {\n                  this.callBackend(res[0].faceId);\n                } else {\n                  this.snackBar(\"More than one face, please capture again\", \"warning\");\n                }\n\n                this.overlay = false;\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function onCapture() {\n        return _onCapture.apply(this, arguments);\n      }\n\n      return onCapture;\n    }(),\n    callBackend: function () {\n      var _callBackend = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(faceId) {\n        var dataSend, res, res1;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                dataSend = new FormData();\n                dataSend.append(\"username\", this.username); // dataSend.append('username','admin')\n\n                dataSend.append(\"course_id\", this.course_id);\n                dataSend.append(\"face_id\", faceId);\n                _context2.next = 6;\n                return this.$store.dispatch(\"callAPI\", {\n                  send: dataSend,\n                  branch: \"/verification/\",\n                  call: \"DO_NOTHING\",\n                  setData: {}\n                });\n\n              case 6:\n                res = _context2.sent;\n\n                if (!(res.code == \"1\")) {\n                  _context2.next = 15;\n                  break;\n                }\n\n                _context2.next = 10;\n                return this.$store.dispatch(\"callAPI\", {\n                  send: dataSend,\n                  branch: \"/user_pass_face/\",\n                  call: \"DO_NOTHING\",\n                  setData: {}\n                });\n\n              case 10:\n                res1 = _context2.sent;\n                this.overlay = false;\n\n                if (res1.code == \"1\") {\n                  this.snackBar(\"Face verification passed!\", \"success\");\n                  this.$router.push({\n                    path: \"/\"\n                  });\n                }\n\n                _context2.next = 16;\n                break;\n\n              case 15:\n                this.snackBar(\"Face verification failed!\", \"error\");\n\n              case 16:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function callBackend(_x) {\n        return _callBackend.apply(this, arguments);\n      }\n\n      return callBackend;\n    }(),\n    dataURLtoFile: function dataURLtoFile(dataURL, filename) {\n      var arr = dataURL.split(\",\");\n      var mime = arr[0].match(/:(.*?);/)[1];\n      var bstr = atob(arr[1]);\n      var n = bstr.length;\n      var u8arr = new Uint8Array(n);\n\n      while (n--) {\n        u8arr[n] = bstr.charCodeAt(n);\n      }\n\n      return new File([u8arr], filename, {\n        type: mime\n      });\n    },\n    onStarted: function onStarted(stream) {\n      console.log(\"On Started Event\", stream);\n    },\n    onStopped: function onStopped(stream) {\n      console.log(\"On Stopped Event\", stream);\n    },\n    onStop: function onStop() {\n      this.snackBar(\"Camera stopped\", \"success\");\n      this.$refs.webcam.stop();\n    },\n    onStart: function onStart() {\n      this.snackBar(\"Camera opened\", \"success\");\n      this.$refs.webcam.start();\n    },\n    onError: function onError(error) {\n      console.log(\"On Error Event\", error);\n    },\n    onCameras: function onCameras(cameras) {\n      this.devices = cameras;\n      console.log(\"On Cameras Event\", cameras);\n    },\n    onCameraChange: function onCameraChange(deviceId) {\n      this.deviceId = deviceId;\n      this.camera = deviceId;\n      console.log(\"On Camera Change Event\", deviceId);\n    }\n  }\n};",{"version":3,"sources":["TestView.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div align=\"center\">\r\n    <v-snackbar v-model=\"alert\" top :color=\"color\">\r\n      <div>\r\n        <v-btn @click=\"alert = false\" icon>\r\n          <v-icon>md-close-circle</v-icon>\r\n        </v-btn>\r\n        {{ alert_msg }}\r\n      </div>\r\n    </v-snackbar>\r\n    <v-overlay v-model=\"overlay\" z-index=\"10000\">Verifying, please wait...</v-overlay>\r\n    <v-row>\r\n      <v-col cols=\"12\" md=\"2\"></v-col>\r\n      <v-col cols=\"12\" md=\"8\">\r\n        <v-row>\r\n          <v-col>\r\n            <div>\r\n              <h1 id=\"header1\">Face Verification</h1>\r\n            </div>\r\n          </v-col>\r\n        </v-row>\r\n        <v-row>\r\n          <v-col cols=\"12\" md=\"6\" class=\"d-none d-md-block\">\r\n            <v-card outlined id=\"left-card\">\r\n              <v-img height=\"100%\" src=../assets/facescan.png>\r\n              </v-img>\r\n            </v-card>\r\n          </v-col>\r\n          <v-col cols=\"12\" md=\"6\">\r\n            <v-card outlined id=\"face-scan-card\">\r\n              <v-row>\r\n                <v-col>\r\n                  <!--  -->\r\n                  <v-row>\r\n                    <v-col>\r\n                      <div>\r\n                        <vue-web-cam\r\n                          ref=\"webcam\"\r\n                          :device-id=\"deviceId\"\r\n                          width=\"100%\"\r\n                          @started=\"onStarted\"\r\n                          @stopped=\"onStopped\"\r\n                          @error=\"onError\"\r\n                          @cameras=\"onCameras\"\r\n                          @camera-change=\"onCameraChange\"\r\n                        />\r\n                      </div>\r\n                    </v-col>\r\n                  </v-row>\r\n                  <!--  -->\r\n                  <v-row>\r\n                    <v-col>\r\n                      <v-btn\r\n                        id=\"submitbtn\"\r\n                        @click=\"onCapture\"\r\n                        color=\"rgb(231,113,51)\"\r\n                        dark\r\n                        block\r\n                      >Capture Face</v-btn>\r\n                    </v-col>\r\n                  </v-row>\r\n                  <!--  -->\r\n                  <v-row>\r\n                    <v-col>\r\n                      <div class=\"text-center\">\r\n                        <v-menu offset-y>\r\n                          <template v-slot:activator=\"{ on }\">\r\n                            <v-btn block color=\"orange\" dark v-on=\"on\" outlined>CHOOSE CAMERA</v-btn>\r\n                          </template>\r\n                          <v-list>\r\n                            <v-list-item\r\n                              v-for=\"item in devices\"\r\n                              :key=\"item.deviceId\"\r\n                              @click=\"camera = item.deviceId\"\r\n                            >\r\n                              <v-list-item-title>{{ item.label }}</v-list-item-title>\r\n                            </v-list-item>\r\n                          </v-list>\r\n                        </v-menu>\r\n                      </div>\r\n                    </v-col>\r\n                  </v-row>\r\n                  <!--  -->\r\n                  <v-row>\r\n                    <v-col>\r\n                      <v-switch v-model=\"showCamera\" @change=\"toggle_camera\" label=\"Camera on/off\"></v-switch>\r\n                    </v-col>\r\n                  </v-row>\r\n                  <!--  -->\r\n                  <!--  -->\r\n                </v-col>\r\n              </v-row>\r\n            </v-card>\r\n          </v-col>\r\n        </v-row>\r\n      </v-col>\r\n      <v-col cols=\"12\" md=\"2\"></v-col>\r\n    </v-row>\r\n    <div align=\"center\">\r\n      <canvas id=\"draw\" style=\"display: none;\" />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n/* eslint-disable */\r\nimport WebCam from \"../components/WebCam\";\r\nimport { mapState } from \"vuex\";\r\nexport default {\r\n  name: \"verify\",\r\n  components: {\r\n    \"vue-web-cam\": WebCam\r\n  },\r\n  data() {\r\n    return {\r\n      showCamera: true,\r\n      course_id: \"\",\r\n      overlay: false,\r\n      img: null,\r\n      camera: null,\r\n      deviceId: null,\r\n      devices: []\r\n    };\r\n  },\r\n  mounted() {\r\n    this.course_id = this.$route.params.id;\r\n    this.hint();\r\n    this.getCompetence();\r\n  },\r\n  computed: {\r\n    ...mapState([\"username\"]),\r\n\r\n    device() {\r\n      return this.devices.find(n => n.deviceId === this.deviceId);\r\n    }\r\n  },\r\n  watch: {\r\n    camera: function(id) {\r\n      this.deviceId = id;\r\n    },\r\n    devices: function() {\r\n      // Once we have a list select the first one\r\n      const [first, ...tail] = this.devices;\r\n      if (first) {\r\n        this.camera = first.deviceId;\r\n        this.deviceId = first.deviceId;\r\n      }\r\n      tail.deviceId\r\n    }\r\n  },\r\n  methods: {\r\n    toggle_camera() {\r\n      if (this.showCamera) {\r\n        this.onStart();\r\n      } else {\r\n        this.onStop();\r\n      }\r\n    },\r\n    snackBar(text, color) {\r\n      this.$store.commit(\"SET_SNACKBAR\", {\r\n        showing: true,\r\n        text: text,\r\n        color: color\r\n      });\r\n    },\r\n    async onCapture() {\r\n      this.overlay = true;\r\n      this.img = this.$refs.webcam.capture();\r\n      let file = this.dataURLtoFile(this.img, \"taken\");\r\n      console.log(file);\r\n      let res = await this.$store.dispatch(\"callAzure\", file);\r\n      console.log(res);\r\n\r\n      if (res.length == 0) {\r\n        this.snackBar(\"No face detected!\", \"warning\");\r\n      } else if (res.length == 1) {\r\n        this.callBackend(res[0].faceId);\r\n      } else {\r\n        this.snackBar(\"More than one face, please capture again\", \"warning\");\r\n      }\r\n      this.overlay = false;\r\n    },\r\n    async callBackend(faceId) {\r\n      let dataSend = new FormData();\r\n\r\n      dataSend.append(\"username\", this.username);\r\n      // dataSend.append('username','admin')\r\n      dataSend.append(\"course_id\", this.course_id);\r\n      dataSend.append(\"face_id\", faceId);\r\n      let res = await this.$store.dispatch(\"callAPI\", {\r\n        send: dataSend,\r\n        branch: \"/verification/\",\r\n        call: \"DO_NOTHING\",\r\n        setData: {}\r\n      });\r\n\r\n      if (res.code == \"1\") {\r\n        // let faceData = new FormData()\r\n        // faceData.append('course_id',this.course_id)\r\n        // faceData.append('username',this.username)\r\n\r\n        let res1 = await this.$store.dispatch(\"callAPI\", {\r\n          send: dataSend,\r\n          branch: \"/user_pass_face/\",\r\n          call: \"DO_NOTHING\",\r\n          setData: {}\r\n        });\r\n        this.overlay = false;\r\n\r\n        if (res1.code == \"1\") {\r\n          this.snackBar(\"Face verification passed!\", \"success\");\r\n          this.$router.push({ path: \"/\" });\r\n        }\r\n      } else {\r\n        this.snackBar(\"Face verification failed!\", \"error\");\r\n      }\r\n    },\r\n    dataURLtoFile(dataURL, filename) {\r\n      var arr = dataURL.split(\",\");\r\n      var mime = arr[0].match(/:(.*?);/)[1];\r\n      var bstr = atob(arr[1]);\r\n      var n = bstr.length;\r\n      var u8arr = new Uint8Array(n);\r\n      while (n--) {\r\n        u8arr[n] = bstr.charCodeAt(n);\r\n      }\r\n      return new File([u8arr], filename, { type: mime });\r\n    },\r\n    onStarted(stream) {\r\n      console.log(\"On Started Event\", stream);\r\n    },\r\n    onStopped(stream) {\r\n      console.log(\"On Stopped Event\", stream);\r\n    },\r\n    onStop() {\r\n      this.snackBar(\"Camera stopped\", \"success\");\r\n\r\n      this.$refs.webcam.stop();\r\n    },\r\n    onStart() {\r\n      this.snackBar(\"Camera opened\", \"success\");\r\n      this.$refs.webcam.start();\r\n    },\r\n    onError(error) {\r\n      console.log(\"On Error Event\", error);\r\n    },\r\n    onCameras(cameras) {\r\n      this.devices = cameras;\r\n      console.log(\"On Cameras Event\", cameras);\r\n    },\r\n    onCameraChange(deviceId) {\r\n      this.deviceId = deviceId;\r\n      this.camera = deviceId;\r\n      console.log(\"On Camera Change Event\", deviceId);\r\n    }\r\n  }\r\n};\r\n</script>\r\n<style scoped>\r\n#left-card {\r\n  padding: 2em;\r\n  height: 100%;\r\n  border-radius: 30px;\r\n  border-color: #e3d0ff;\r\n}\r\n\r\n#face-scan-card {\r\n  padding: 2em;\r\n  border-radius: 30px;\r\n  border-color: #e3d0ff;\r\n}\r\n#header1 {\r\n  color: #5c6ac4;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/views"}]}